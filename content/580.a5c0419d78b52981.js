"use strict";(self.webpackChunkweb_building=self.webpackChunkweb_building||[]).push([[580],{7580:(Vt,m,l)=>{l.r(m),l.d(m,{JsBookModule:()=>Ht});var c={};l.r(c),l.d(c,{js_2_4_1:()=>g,js_2_4_10:()=>Y,js_2_4_10_1:()=>H,js_2_4_11:()=>N,js_2_4_11_1:()=>B,js_2_4_1_1:()=>y,js_2_4_2:()=>j,js_2_4_2_1:()=>b,js_2_4_3:()=>f,js_2_4_3_1:()=>v,js_2_4_4:()=>E,js_2_4_4_1:()=>C,js_2_4_5:()=>x,js_2_4_5_1:()=>O,js_2_4_6:()=>T,js_2_4_6_1:()=>A,js_2_4_7:()=>I,js_2_4_7_1:()=>k,js_2_4_8:()=>D,js_2_4_8_1:()=>w,js_2_4_9:()=>P,js_2_4_9_1:()=>J,js_3_1_1:()=>S,js_3_1_1_1:()=>F,js_3_1_2:()=>L,js_3_1_2_1:()=>M,js_3_1_3:()=>V,js_3_1_3_1:()=>Q,js_3_1_4:()=>R,js_3_1_4_1:()=>Z,js_3_1_5:()=>U,js_3_1_5_1:()=>z,js_3_1_6:()=>G,js_3_1_6_1:()=>$,js_3_1_7:()=>W,js_3_1_7_1:()=>X,js_3_2_1:()=>K,js_3_2_2:()=>q,js_3_2_3:()=>ee,js_3_2_3_1:()=>te,js_3_2_4:()=>ne,js_3_2_4_1:()=>oe,js_3_2_5:()=>se,js_3_2_5_1:()=>le,js_3_2_6:()=>re,js_3_2_6_1:()=>ie,js_3_2_7:()=>ae,js_3_2_7_1:()=>ce,js_3_3_1:()=>me,js_3_3_2:()=>_e,js_3_3_3:()=>ue,js_3_3_3_1:()=>de,js_3_3_4:()=>pe,js_3_3_4_1:()=>he,js_3_3_5:()=>ge,js_3_3_5_1:()=>ye,js_3_3_6:()=>je,js_3_3_6_1:()=>be,js_3_3_7:()=>fe,js_3_3_7_1:()=>ve,js_3_3_8:()=>Ee,js_3_3_8_1:()=>Ce,js_3_3_9:()=>xe,js_3_3_9_1:()=>Oe,js_4_2_1:()=>Te,js_4_2_10:()=>Re,js_4_2_10_1:()=>Ze,js_4_2_1_1:()=>Ae,js_4_2_2:()=>Ie,js_4_2_2_1:()=>ke,js_4_2_3:()=>De,js_4_2_3_1:()=>we,js_4_2_4:()=>Pe,js_4_2_4_1:()=>Je,js_4_2_5:()=>Ye,js_4_2_5_1:()=>He,js_4_2_6:()=>Ne,js_4_2_6_1:()=>Be,js_4_2_7:()=>Se,js_4_2_7_1:()=>Fe,js_4_2_8:()=>Le,js_4_2_8_1:()=>Me,js_4_2_9:()=>Ve,js_4_2_9_1:()=>Qe,js_4_3_1:()=>Ue,js_4_3_2:()=>ze,js_4_3_2_1:()=>Ge,js_4_3_3:()=>$e,js_4_3_3_1:()=>We,js_4_3_4:()=>Xe,js_4_3_4_1:()=>Ke,js_4_3_5:()=>qe,js_4_3_5_1:()=>et,js_4_3_6:()=>tt,js_4_3_6_1:()=>nt,js_4_4_1:()=>ot,js_4_4_1_1:()=>st,js_5_2_1:()=>lt,js_5_2_1_1:()=>rt,js_5_2_2:()=>it,js_5_3_1:()=>at,js_5_3_2:()=>ct,js_5_4_1:()=>mt,js_7_1_1:()=>_t,js_7_1_2:()=>ut,js_7_1_3:()=>dt,js_7_2_1:()=>pt,js_7_2_2:()=>ht,js_7_2_3:()=>gt,js_7_3_1:()=>yt,js_7_3_2:()=>jt,js_7_3_3:()=>bt,js_7_3_4:()=>ft,js_8_2_1:()=>vt});var a=l(6895),r=l(9299),e=l(4650),_=l(4214);let p=(()=>{class t{constructor(n){this.coreService=n}ngOnInit(){this.coreService.getJsBookData()}ngOnDestroy(){}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(_.p))},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-js-book"]],decls:1,vars:0,template:function(n,s){1&n&&e._UZ(0,"router-outlet")},dependencies:[r.lC]}),t})();var h=l(9117);const g="if (condition) {\n  // code to be executed if the condition is true\n} else {\n  // code to be executed if the condition is false\n}",y='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let number = 10;\n\n    if (number > 0) {\n      console.log("The number is positive.");\n    } else {\n      console.log("The number is zero or negative.");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',j="if (condition1) {\n  // code to be executed if condition1 is true\n} else if (condition2) {\n  // code to be executed if condition2 is true\n} else {\n  // code to be executed if all conditions are false\n}",b='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let num = -10;\n\n    if (num > 0) {\n      console.log("The number is positive.");\n    } else if (num < 0) {\n      console.log("The number is negative.");\n    } else {\n      console.log("The number is zero.");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',f="switch (expression) {\n  case value1:\n    // code to be executed if expression matches value1\n    break;\n  case value2:\n    // code to be executed if expression matches value2\n    break;\n  default:\n    // code to be executed if no case matches the expression\n}",v='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let day = "Thursday";\n\n    switch (day) {\n      case "Monday":\n        console.log("It\'s Monday!");\n        break;\n      case "Tuesday":\n        console.log("It\'s Tuesday!");\n        break;\n      case "Wednesday":\n        console.log("It\'s Wednesday!");\n        break;\n      case "Thursday":\n        console.log("It\'s Thursday!");\n        break;\n      case "Friday":\n        console.log("It\'s Friday!");\n        break;\n      default:\n        console.log("It\'s the weekend!");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',E="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n}",C='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 1; i <= 5; i++) {\n      console.log("Iteration " + i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',x="while (condition) {\n  // code to be executed as long as the condition is true\n}",O='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let count = 1;\n\n    while (count <= 5) {\n      console.log("Iteration " + count);\n      count++;\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',T="do {\n  // code to be executed at least once\n} while (condition);",A='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let count = 1;\n\n    do {\n      console.log("Iteration " + count);\n      count++;\n    } while (count <= 5);\n  <\/script>\n</head>\n<body>\n</body>\n</html>',I="for (variable in object) {\n  // code to be executed for each property\n}",k='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const person = {\n      name: "John",\n      age: 30,\n      city: "New York"\n    };\n    \n    for (let key in person) {\n      console.log(key + ": " + person[key]);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',D="for (variable of iterable) {\n  // code to be executed for each element\n}",w='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const fruits = ["apple", "banana", "orange"];\n\n    for (let fruit of fruits) {\n      console.log(fruit);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',P="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n  break;\n  // code to be executed in each iteration\n}",J='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 0; i < 10; i++) {\n      if (i === 5) {\n        break; // exit the loop when i is 5\n      }\n      console.log(i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',Y="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n  continue;\n  // code to be executed in each iteration\n}",H='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 0; i < 10; i++) {\n      if (i === 5) {\n        continue; // skip the iteration when i is 5\n      }\n      console.log(i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',N="for (variable of iterable) {\n  // code to be executed for each element\n  return;\n  // code to be executed for each element\n}",B='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function findNumber(array, target) {\n      for (let num of array) {\n        if (num === target) {\n          return true; // exit the function and return true if target is found\n        }\n      }\n      return false; // return false if target is not found\n    }\n\n    console.log(findNumber([1, 2, 3, 4, 5], 3));\n  <\/script>\n</head>\n<body>\n</body>\n</html>',S="function functionName(parameter1, parameter2, ...) {\n  // code to be executed\n  return result; // optional\n}",F='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Definition Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function greet(name) {\n      const message = "Hello, " + name + "!";\n    \n      return message;\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',L="functionName(argument1, argument2, ...);",M='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Call Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function greet(name) {\n      const message = "Hello, " + name + "!";\n    \n      return message;\n    }\n\n    // Calling the function\n    const result = greet("John");\n    console.log(result); // Output: Hello, John!\n  <\/script>\n</head>\n<body>\n</body>\n</html>',V='// Global variable\nlet globalVariable = "I\'m a global variable";\n\nfunction exampleFunction() {\n  // Local variable\n  let localVariable = "I\'m a local variable";\n}',Q='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Scope Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    // Global variable\n    let globalVariable = "I\'m a global variable";\n    \n    function exampleFunction() {\n      // Local variable\n      let localVariable = "I\'m a local variable";\n    \n      console.log(globalVariable); // Accessing the global variable\n      console.log(localVariable); // Accessing the local variable\n    }\n    \n    exampleFunction(); // Calling the function\n    \n    console.log(globalVariable); // Accessing the global variable outside the function\n    // console.log(localVariable); // This will result in an error since localVariable is not accessible outside the function\n  <\/script>\n</head>\n<body>\n</body>\n</html>',R="let anonymousFunction = function(parameter1, parameter2) {\n  // code to be executed\n};",Z='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Anonymous Function Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let anonymousFunction = function(parameter1, parameter2) {\n      // code to be executed\n      console.log("Parameters:", parameter1, parameter2);\n      console.log("Executing the anonymous function");\n    };\n    \n    // Calling the anonymous function\n    anonymousFunction("Hello", "World");\n  <\/script>\n</head>\n<body>\n</body>\n</html>',U="function outerFunction() {\n  let outerVariable = \"I'm an outer variable\";\n\n  function innerFunction() {\n    console.log(outerVariable); // Accessing the outer variable from the inner function\n  }\n\n  return innerFunction;\n}\n\n// Creating a closure by calling the outer function and assigning the returned inner function to a variable\nlet closure = outerFunction();\n\n// Calling the inner function, which still has access to the outer variable\nclosure(); // Output: I'm an outer variable",z='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Closure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function outerFunction() {\n      let outerVariable = "I\'m an outer variable";\n    \n      function innerFunction() {\n        console.log(outerVariable); // Accessing the outer variable from the inner function\n      }\n    \n      return innerFunction;\n    }\n    \n    // Creating a closure by calling the outer function and assigning the returned inner function to a variable\n    let closure = outerFunction();\n    \n    // Calling the inner function, which still has access to the outer variable\n    closure(); // Output: I\'m an outer variable\n  <\/script>\n</head>\n<body>\n</body>\n</html>',G="const functionName = (parameter1, parameter2) => {\n  // code to be executed\n  return result; // optional\n};",$='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Arrow Function Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const sum = (num1, num2) => {\n      return num1 + num2;\n    };\n    \n    console.log(sum(2, 3)); // Output: 5\n  <\/script>\n</head>\n<body>\n</body>\n</html>',W="(function() {\n  // code to be executed immediately\n})();",X='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>IIFE Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    (function(name) {\n      console.log("Hello, " + name + "!");\n    })("John");\n  <\/script>\n</head>\n<body>\n</body>\n</html>',K="// Using array literal syntax\nlet myArray = [1, 2, 3, 4, 5];",q="// Using Array constructor\nlet myArray = new Array(1, 2, 3, 4, 5);",ee="let myArray = [1, 2, 3, 4, 5];\n\nconsole.log(myArray[0]); // Output: 1\nconsole.log(myArray[2]); // Output: 3",te='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    console.log(myArray[0]); // Output: 1\n    console.log(myArray[2]); // Output: 3\n  <\/script>\n</head>\n<body>\n</body>\n</html>',ne="let myArray = [1, 2, 3, 4, 5];\n\nmyArray[2] = 10;\nconsole.log(myArray); // Output: [1, 2, 10, 4, 5]",oe='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    myArray[2] = 10;\n    console.log(myArray); // Output: [1, 2, 10, 4, 5]\n  <\/script>\n</head>\n<body>\n</body>\n</html>',se="let myArray = [1, 2, 3, 4, 5];\nconsole.log(myArray.length); // Output: 5\n\nmyArray.length = 3;\nconsole.log(myArray); // Output: [1, 2, 3]",le='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n    console.log(myArray.length); // Output: 5\n    \n    myArray.length = 3;\n    console.log(myArray); // Output: [1, 2, 3]\n  <\/script>\n</head>\n<body>\n</body>\n</html>',re="let myArray = [1, 2, 3];\n\nmyArray.push(4); // Adds 4 at the end\nconsole.log(myArray); // Output: [1, 2, 3, 4]\n\nlet removedElement = myArray.pop(); // Removes the last element and returns it\nconsole.log(myArray); // Output: [1, 2, 3]\nconsole.log(removedElement); // Output: 4\n\nmyArray.unshift(0); // Adds 0 at the beginning\nconsole.log(myArray); // Output: [0, 1, 2, 3]\n\nlet shiftedElement = myArray.shift(); // Removes the first element and returns it\nconsole.log(myArray); // Output: [1, 2, 3]\nconsole.log(shiftedElement); // Output: 0",ie='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3];\n\n    myArray.push(4); // Adds 4 at the end\n    console.log(myArray); // Output: [1, 2, 3, 4]\n    \n    let removedElement = myArray.pop(); // Removes the last element and returns it\n    console.log(myArray); // Output: [1, 2, 3]\n    console.log(removedElement); // Output: 4\n    \n    myArray.unshift(0); // Adds 0 at the beginning\n    console.log(myArray); // Output: [0, 1, 2, 3]\n    \n    let shiftedElement = myArray.shift(); // Removes the first element and returns it\n    console.log(myArray); // Output: [1, 2, 3]\n    console.log(shiftedElement); // Output: 0\n  <\/script>\n</head>\n<body>\n</body>\n</html>',ae="let myArray = [1, 2, 3, 4, 5];\n\nfor (let i = 0; i < myArray.length; i++) {\n  console.log(myArray[i]);\n}\n\nmyArray.forEach(function(element) {\n  console.log(element);\n});",ce='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    for (let i = 0; i < myArray.length; i++) {\n      console.log(myArray[i]);\n    }\n\n    myArray.forEach(function(element) {\n      console.log(element);\n    });\n  <\/script>\n</head>\n<body>\n</body>\n</html>',me='// Using object literal syntax\nlet person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};',_e='// Using Object constructor\nlet person = new Object();\nperson.name = "John";\nperson.age = 30;\nperson.profession = "Developer";',ue='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nconsole.log(person.name); // Output: John\nconsole.log(person[\'age\']); // Output: 30',de='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      profession: "Developer"\n    };\n    \n    console.log(person.name); // Output: John\n    console.log(person[\'age\']); // Output: 30\n  <\/script>\n</head>\n<body>\n</body>\n</html>',pe='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nperson.age = 35;\nperson[\'profession\'] = "Engineer";',he='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      profession: "Developer"\n    };\n    \n    person.age = 35;\n    person[\'profession\'] = "Engineer";\n    \n    console.log(person.age); // Output: 35\n    console.log(person[\'profession\']); // Output: Engineer\n  <\/script>\n</head>\n<body>\n</body>\n</html>',ge='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nperson.city = "New York";',ye='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      profession: "Developer"\n    };\n    \n    person.city = "New York";\n      \n    console.log(person.name); // Output: John\n    console.log(person.city); // Output: New York\n  <\/script>\n</head>\n<body>\n</body>\n</html>',je='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\ndelete person.profession;',be='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      profession: "Developer"\n    };\n    \n    delete person.profession;\n    \n    console.log(person.name); // Output: John\n    console.log(person.profession); // Output: undefined\n  <\/script>\n</head>\n<body>\n</body>\n</html>',fe='let person = {\n  name: "John",\n  age: 30,\n  sayHello: function() {\n    console.log("Hello!");\n  }\n};\n\nperson.sayHello(); // Output: Hello!',ve='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      sayHello: function() {\n        console.log("Hello!");\n      }\n    };\n    \n    person.sayHello(); // Output: Hello!\n  <\/script>\n</head>\n<body>\n</body>\n</html>',Ee='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nfor (let key in person) {\n  console.log(key + ": " + person[key]);\n}\n\nlet keys = Object.keys(person);\nfor (let i = 0; i < keys.length; i++) {\n  let key = keys[i];\n  console.log(key + ": " + person[key]);\n}',Ce='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let person = {\n      name: "John",\n      age: 30,\n      profession: "Developer"\n    };\n    \n    for (let key in person) {\n      console.log(key + ": " + person[key]);\n    }\n    \n    let keys = Object.keys(person);\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      console.log(key + ": " + person[key]);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',xe='function Person(name, age) {\n  this.name = name;\n  this.age = age;\n  this.sayHello = function() {\n    console.log("Hello, my name is " + this.name);\n  };\n}\n\nlet john = new Person("John", 30);\njohn.sayHello(); // Output: Hello, my name is John',Oe='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Object Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function Person(name, age) {\n      this.name = name;\n      this.age = age;\n      this.sayHello = function() {\n        console.log("Hello, my name is " + this.name);\n      };\n    }\n    \n    let john = new Person("John", 30);\n    john.sayHello(); // Output: Hello, my name is John\n  <\/script>\n</head>\n<body>\n</body>\n</html>',Te="let element = document.getElementById('elementId');",Ae="<!DOCTYPE html>\n<html>\n<head>\n  <title>Get Elements by ID Example</title>\n  <script src=\"assets/js/utils.js\"><\/script>\n</head>\n<body>\n  <h1>Get Elements by ID Example</h1>\n  <div id=\"elementId\">This is the selected element.</div>\n  <br/>\n\n  <script>\n    let element = document.getElementById('elementId');\n\n    console.log('This is the inner text of the selected element: ' + element.innerText); // innerText property will be discussed below\n  <\/script>\n</body>\n</html>",Ie="let elements = document.getElementsByClassName('className');",ke='<!DOCTYPE html>\n<html>\n<head>\n  <title>Get Elements by Class Name Example</title>\n  <script src="assets/js/utils.js"><\/script>\n</head>\n<body>\n  <h1>Get Elements by Class Name Example</h1>\n  <div class="className">Element 1</div>\n  <div class="className">Element 2</div>\n  <div class="className">Element 3</div>\n  <br/>\n\n  <script>\n    let elements = document.getElementsByClassName(\'className\');\n\n    for (let i = 0; i < elements.length; i++) {\n      console.log(\'This is the selected element: \' + elements[i].innerText);\n    };\n  <\/script>\n</body>\n</html>',De="let elements = document.getElementsByTagName('tagName');",we="<!DOCTYPE html>\n<html>\n<head>\n  <title>Get Elements by Tag Name Example</title>\n  <script src=\"assets/js/utils.js\"><\/script>\n</head>\n<body>\n  <h1>Get Elements by Tag Name Example</h1>\n  <div>Element 1</div>\n  <p>Element 2</p>\n  <span>Element 3</span>\n  <br/>\n\n  <script>\n    let elements = document.getElementsByTagName('div');\n    \n    for (let i = 0; i < elements.length; i++) {\n      console.log('This is the selected element: ' + elements[i].innerText);\n    };\n  <\/script>\n</body>\n</html>",Pe="let element = document.querySelector('selector');\nlet elements = document.querySelectorAll('selector');",Je="<!DOCTYPE html>\n<html>\n<head>\n  <title>Query Selector Examples</title>\n  <script src=\"assets/js/utils.js\"><\/script>\n</head>\n<body>\n  <h1>Query Selector Example</h1>\n  <div id=\"elementId\">Element 1</div>\n  <div class=\"className\">Element 2</div>\n  <div class=\"className\">Element 3</div>\n  <br/>\n\n  <script>\n    // JavaScript code\n    let element = document.querySelector('#elementId');\n\n    console.log('This is the selected element by id: ' + element.innerText);\n\n    let elements = document.querySelectorAll('.className');\n    \n    for (let i = 0; i < elements.length; i++) {\n      console.log('This is the selected element by class name: ' + elements[i].innerText);\n    };\n  <\/script>\n</body>\n</html>",Ye="element.innerHTML = 'New HTML content';\nelement.textContent = 'New text content';",He="<!DOCTYPE html>\n<html>\n<head>\n  <title>Modify Element Content Example</title>\n</head>\n<body>\n  <h1 id=\"elementId\">Initial Content</h1>\n  <p>Some paragraph with initial content</p>\n\n  <script>\n    let element = document.getElementById('elementId');\n    element.innerHTML = 'New HTML content';\n\n    let paragraph = document.querySelector('p');\n    paragraph.textContent = 'New text content';\n  <\/script>\n</body>\n</html>",Ne="let value = element.getAttribute('attributeName');\nelement.setAttribute('attributeName', 'attributeValue');",Be="<!DOCTYPE html>\n<html>\n<head>\n  <title>Get and Set Attribute Example</title>\n  <script src=\"assets/js/utils.js\"><\/script>\n</head>\n<body>\n  <img id=\"myImage\" src=\"assets/images/cute_cat.jpg\" alt=\"My Image\">\n  <br/>\n\n  <script>\n    // JavaScript code\n    let element = document.getElementById('myImage');\n\n    // Get the value of the 'src' attribute\n    let value = element.getAttribute('src');\n    console.log(value);\n\n    // Set the value of the 'alt' attribute\n    element.setAttribute('alt', 'New Alt Text');\n  <\/script>\n</body>\n</html>",Se="element.style.property = 'value';",Fe="<!DOCTYPE html>\n<html>\n<head>\n  <title>Set CSS Property Example</title>\n</head>\n<body>\n  <div id=\"myElement\">Hello, World!</div>\n\n  <script>\n    let element = document.getElementById('myElement');\n    \n    // Set the CSS property values\n    element.style.color = 'blue';\n    element.style.backgroundColor = 'yellow';\n    element.style.fontSize = '20px';\n    element.style.padding = '10px';\n  <\/script>\n</body>\n</html>",Le="element.classList.add('className');\nelement.classList.remove('className');",Me="<!DOCTYPE html>\n<html>\n<head>\n  <title>Class Manipulation on Hover Example</title>\n  <style>\n    .highlight {\n      background-color: yellow;\n      color: black;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"myElement\">Hello, World!</div>\n\n  <script>\n    let element = document.getElementById('myElement');\n\n    // Add class on mouseover; addEventListener method will be discussed on next chapter\n    element.addEventListener('mouseover', function() {\n      element.classList.add('highlight');\n    });\n\n    // Remove class on mouseout\n    element.addEventListener('mouseout', function() {\n      element.classList.remove('highlight');\n    });\n  <\/script>\n</body>\n</html>",Ve="let newElement = document.createElement('tagName');\nlet newText = document.createTextNode('Text content');",Qe="<!DOCTYPE html>\n<html>\n<head>\n  <title>Create Element and Create Text Node Example</title>\n</head>\n<body>\n  <div id=\"container\"></div>\n\n  <script>\n    let container = document.getElementById('container');\n\n    // Create a new element\n    let newElement = document.createElement('p');\n\n    // Create a text node\n    let newText = document.createTextNode('Text content');\n\n    // Append the text node to the new element\n    newElement.appendChild(newText);\n\n    // Append the new element to the container\n    container.appendChild(newElement);\n  <\/script>\n</body>\n</html>",Re="parentElement.appendChild(newElement);\nparentElement.removeChild(childElement);",Ze="<!DOCTYPE html>\n<html>\n<head>\n  <title>Append and Remove Child Example</title>\n</head>\n<body>\n  <div id=\"parent\">\n    <p id=\"child\">Child Element</p>\n  </div>\n\n  <script>\n    // JavaScript code\n    let parentElement = document.getElementById('parent');\n    let childElement = document.getElementById('child');\n\n    // Create a new element\n    let newElement = document.createElement('span');\n    newElement.textContent = 'New Child Element';\n\n    // Append the new element to the parent\n    parentElement.appendChild(newElement);\n\n    // Remove the child element from the parent\n    parentElement.removeChild(childElement);\n  <\/script>\n</body>\n</html>",Ue="element.addEventListener('eventName', eventHandler);",ze="function eventHandler(event) {\n  // Event handling code\n}",Ge="<!DOCTYPE html>\n<html>\n<head>\n  <title>Event Handler Example</title>\n  <script src=\"assets/js/utils.js\"><\/script>\n</head>\n<body>\n  <button id=\"myButton\">Click Me</button>\n\n  <script>\n    function eventHandler(event) {\n      // Event handling code\n      alert('Button clicked!');\n    }\n\n    // Select the button element\n    let button = document.getElementById('myButton');\n\n    // Attach the event handler to the button's click event\n    button.addEventListener('click', eventHandler);\n  <\/script>\n</body>\n</html>",$e="// Event bubbling\nelement1.addEventListener('click', eventHandler);\n\n// Event capturing\nelement2.addEventListener('click', eventHandler, true);",We="<!DOCTYPE html>\n<html>\n<head>\n  <title>Event Bubbling and Capturing Example</title>\n  <style>\n    div {\n      padding: 20px;\n      border: 1px solid black;\n      margin-bottom: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"outerDiv1\">\n    <h2>Bubbling:</h2>\n    <div id=\"innerDiv1\">Click Me!</div>\n  </div>\n\n  <div id=\"outerDiv2\">\n    <h2>Capturing:</h2>\n    <div id=\"innerDiv2\">Click Me!</div>\n  </div>\n</div>\n  <script>\n    function eventHandler(event) {\n      alert('Event handler triggered on:' + event.currentTarget.id);\n      // event.stopPropagation();\n    }\n\n    let innerDiv1 = document.getElementById('innerDiv1');\n    let outerDiv1 = document.getElementById('outerDiv1');\n    \n    let innerDiv2 = document.getElementById('innerDiv2');\n    let outerDiv2 = document.getElementById('outerDiv2');\n    \n    // Event bubbling\n    innerDiv1.addEventListener('click', eventHandler, false);\n    outerDiv1.addEventListener('click', eventHandler, false);\n\n    // Event capturing\n    innerDiv2.addEventListener('click', eventHandler, true);\n    outerDiv2.addEventListener('click', eventHandler, true);\n  <\/script>\n</body>\n</html>",Xe="const listContainer = document.getElementById('listContainer');\n\nfunction handleItemClick(event) {\n  const target = event.target;\n\n  if (target.tagName === 'LI') {\n    // Toggle the 'selected' class on the clicked list item\n    target.classList.toggle('selected');\n  }\n}\n\n// Attach the event listener to the parent element (listContainer)\nlistContainer.addEventListener('click', handleItemClick);\n\n// Simulate dynamically adding more list items after a delay\nsetTimeout(() => {\n  const newItem = document.createElement('li');\n  newItem.textContent = 'Item 4';\n  listContainer.appendChild(newItem);\n}, 2000);",Ke="<!DOCTYPE html>\n<html>\n<head>\n  <title>Event Delegation Example</title>\n  <style>\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n\n    li {\n      cursor: pointer;\n    }\n\n    .selected {\n      background-color: yellow;\n    }\n  </style>\n</head>\n<body>\n  <ul id=\"listContainer\">\n    \x3c!-- Initial list items --\x3e\n    <li>Item 1</li>\n    <li>Item 2</li>\n    <li>Item 3</li>\n  </ul>\n\n  <script>\n    const listContainer = document.getElementById('listContainer');\n\n    function handleItemClick(event) {\n      const target = event.target;\n\n      if (target.tagName === 'LI') {\n        // Toggle the 'selected' class on the clicked list item\n        target.classList.toggle('selected');\n      }\n    }\n\n    // Attach the event listener to the parent element (listContainer)\n    listContainer.addEventListener('click', handleItemClick);\n\n    // Simulate dynamically adding more list items after a delay\n    setTimeout(() => {\n      const newItem = document.createElement('li');\n      newItem.textContent = 'Item 4';\n      listContainer.appendChild(newItem);\n    }, 2000);\n  <\/script>\n</body>\n</html>",qe="element.removeEventListener('eventName', eventHandler);",et="<!DOCTYPE html>\n<html>\n<head>\n  <title>Remove Event Listener Example</title>\n</head>\n<body>\n  <button id=\"myButton\">Click Me</button>\n\n  <script>\n    function eventHandler() {\n      alert('Button clicked!');\n    }\n\n    let button = document.getElementById('myButton');\n\n    // Attach the event handler to the button's click event\n    button.addEventListener('click', eventHandler);\n\n    // Remove the event handler after 3 seconds\n    setTimeout(() => {\n      button.removeEventListener('click', eventHandler);\n      alert('Event handler removed!');\n    }, 3000);\n  <\/script>\n</body>\n</html>",tt='<button onclick="eventHandler(event)">Click me</button>',nt="<!DOCTYPE html>\n<html>\n<head>\n  <title>Inline Event Handling Example</title>\n</head>\n<body>\n  <button onclick=\"eventHandler()\">Click me</button>\n\n  <script>\n    function eventHandler() {\n      alert('Button clicked!');\n    }\n  <\/script>\n</body>\n</html>",ot="// Fetch data from the server\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => {\n    // DOM manipulation\n    const container = document.getElementById('data-container');\n\n    // Create a new list element for each data item\n    data.forEach(item => {\n      const listItem = document.createElement('li');\n      listItem.textContent = item.name;\n      container.appendChild(listItem);\n    });\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });",st="<!DOCTYPE html>\n<html>\n<head>\n  <title>Fetch API Example</title>\n</head>\n<body>\n  <ul id=\"data-container\"></ul>\n\n  <script>\n    fetch('assets/data/json/list.json')\n      .then(response => response.json())\n      .then(data => {\n        const container = document.getElementById('data-container');\n\n        // Create a new list element for each data item\n        data.forEach(item => {\n          const listItem = document.createElement('li');\n          listItem.textContent = item.name;\n          container.appendChild(listItem);\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  <\/script>\n</body>\n</html>",lt="function callbackFunction(result) {\n  // Code to be executed when the callback is invoked\n}\n\n// Passing callbackFunction as a callback to another function\nsomeFunction(callbackFunction);",rt='function doSomething(callback) {\n  // Perform some operations\n  console.log("Doing something...");\n\n  // Simulating an asynchronous operation with setTimeout\n  setTimeout(function() {\n    // Completed the asynchronous operation\n    console.log("Operation completed!");\n\n    // Invoke the callback function\n    callback();\n  }, 2000); // Wait for 2 seconds\n}\n\nfunction callbackFunction() {\n  console.log("Callback function called!");\n}\n\n// Call the doSomething function and pass the callback function as an argument\ndoSomething(callbackFunction);',it="function callbackFunction(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // Process the result\n  }\n}",at='function fetchData() {\n  return new Promise(function(resolve, reject) {\n    // Simulating an asynchronous operation with setTimeout\n    setTimeout(function() {\n      // Simulating a successful response\n      const data = { message: "Data successfully fetched!" };\n\n      // Resolve the promise with the data\n      resolve(data);\n      \n      // Simulating an error scenario\n      // reject(new Error("Failed to fetch data!"));\n    }, 2000); // Wait for 2 seconds\n  });\n}',ct="promise\n.then(result => {\n  // Process the result\n  return transformedResult;\n})\n.then(transformedResult => {\n  // Process the transformed result\n})\n.catch(error => {\n  // Handle any errors along the chain\n});",mt="async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}",_t="function outerFunction() {\n  let outerVariable = 'I am outside!';\n\n  if (true) {\n    let innerVariable = 'I am inside!';\n    console.log(innerVariable); // Output: I am inside!\n    console.log(outerVariable); // Output: I am outside!\n  }\n\n  console.log(innerVariable); // Error: innerVariable is not defined\n}\n\nouterFunction();",ut="function outerFunction() {\n  var outerVariable = 'I am in the outer function!';\n\n  function innerFunction() {\n    var innerVariable = 'I am in the inner function!';\n    console.log(innerVariable); // Output: I am in the inner function!\n    console.log(outerVariable); // Output: I am in the outer function!\n  }\n\n  return innerFunction;\n}\n\nvar closure = outerFunction();\nclosure();",dt="function createCounter() {\n  var count = 0; // Private variable\n\n  function increment() {\n    count++;\n    console.log('Count:', count);\n  }\n\n  function decrement() {\n    count--;\n    console.log('Count:', count);\n  }\n\n  return {\n    increment: increment, // Public interface\n    decrement: decrement // Public interface\n  };\n}\n\nvar counter = createCounter();\ncounter.increment(); // Output: Count: 1\ncounter.increment(); // Output: Count: 2\ncounter.decrement(); // Output: Count: 1",pt="// Creating a prototype object\nvar animalPrototype = {\n  sound: 'Unknown',\n  makeSound: function() {\n    console.log(this.sound);\n  }\n};\n\n// Creating a new object using the prototype\nvar dog = Object.create(animalPrototype);\ndog.sound = 'Woof';\n\n// Accessing property and method via prototype chain\ndog.makeSound(); // Output: Woof\n\n// Creating another object using the same prototype\nvar cat = Object.create(animalPrototype);\ncat.sound = 'Meow';\n\ncat.makeSound(); // Output: Meow",ht="// Constructor function \n function Person(name, age) { \n   this.name = name; \n   this.age = age; \n } \n \n // Adding a method to the prototype \n Person.prototype.introduce = function() { \n   console.log(`Hi, my name is ${this.name}, and I am ${this.age} years old.`); \n }; \n \n // Creating objects using the constructor function \n var person1 = new Person('Alice', 25); \n var person2 = new Person('Bob', 30); \n \n // Accessing properties and calling the inherited method \n console.log(person1.name); // Output: Alice \n console.log(person2.age); // Output: 30 \n \n person1.introduce(); // Output: Hi, my name is Alice, and I am 25 years old. \n person2.introduce(); // Output: Hi, my name is Bob, and I am 30 years old.",gt="// ES6 class syntax \n class Person { \n   constructor(name, age) { \n     this.name = name; \n     this.age = age; \n   } \n   \n   introduce() { \n     console.log(`Hi, my name is ${this.name}, and I am ${this.age} years old.`); \n   } \n } \n \n // Creating objects using the class \n var person1 = new Person('Alice', 25); \n var person2 = new Person('Bob', 30); \n \n // Accessing properties and calling the method \n console.log(person1.name); // Output: Alice \n console.log(person2.age); // Output: 30 \n \n person1.introduce(); // Output: Hi, my name is Alice, and I am 25 years old. \n person2.introduce(); // Output: Hi, my name is Bob, and I am 30 years old.",yt="// Pure function\nfunction addNumbers(a, b) {\n  return a + b;\n}\n\n// Calling the pure function\nvar result = addNumbers(3, 5);\nconsole.log(result); // Output: 8",jt="// Immutable data\nconst originalArray = [1, 2, 3, 4, 5];\n\n// Creating a new array with an updated value\nconst updatedArray = [...originalArray, 6];\n\n// Output the original and updated arrays\nconsole.log(originalArray); // Output: [1, 2, 3, 4, 5]\nconsole.log(updatedArray); // Output: [1, 2, 3, 4, 5, 6]",bt="// Higher-order function example: map\nfunction map(array, transform) {\n  var transformedArray = [];\n  \n  for (var i = 0; i < array.length; i++) {\n    transformedArray.push(transform(array[i]));\n  }\n  \n  return transformedArray;\n}\n\n// Example usage of the higher-order function\nvar numbers = [1, 2, 3, 4, 5];\nvar doubledNumbers = map(numbers, function(num) {\n  return num * 2;\n});\n\nconsole.log(doubledNumbers); // Output: [2, 4, 6, 8, 10]",ft="// Example functions for function composition\nfunction add(a, b) {\n  return a + b;\n}\n\nfunction multiply(a, b) {\n  return a * b;\n}\n\nfunction square(x) {\n  return x * x;\n}\n\n// Function composition example\nfunction compose(...functions) {\n  return function(input) {\n    return functions.reduceRight(function(result, fn) {\n      return fn(result);\n    }, input);\n  };\n}\n\n// Compose the functions\nvar composedFunction = compose(square, multiply.bind(null, 3), add.bind(null, 2));\n\n// Apply the composed function to an input\nvar result = composedFunction(4);\nconsole.log(result); // Output: 324",vt="try {\n  // Code that might throw an error\n} catch (error) {\n  // Handle the error\n  console.error('Error:', error);\n}";var u=l(294),d=l(1481),Et=l(3353),Ct=l(7913),xt=l(5342);function Ot(t,o){if(1&t&&(e.TgZ(0,"h2",null,4),e._uU(2),e.qZA()),2&t){const n=e.oxw(2);e.xp6(2),e.AsE("",null==n.chapter?null:n.chapter.chid,". ",null==n.chapter?null:n.chapter.title,"")}}function Tt(t,o){if(1&t&&(e.ynx(0),e.YNc(1,Ot,3,2,"h2",1),e.BQk()),2&t){const n=e.oxw();e.xp6(1),e.Q6J("ngIf",null==n.chapter?null:n.chapter.chid)}}function At(t,o){if(1&t&&e._UZ(0,"p",8),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.Q6J("innerHTML",s.bypass(null==n?null:n.text),e.oJD)}}function It(t,o){if(1&t&&e._UZ(0,"p",8),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.Q6J("innerHTML",s.bypass(null==n?null:n.text),e.oJD)}}function kt(t,o){if(1&t&&(e.TgZ(0,"p"),e._UZ(1,"app-code-viewer",9),e.qZA()),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.xp6(1),e.Q6J("lang","JS")("codeConfig",s.rectify(n.codeConfig))}}function Dt(t,o){if(1&t&&(e.ynx(0),e.YNc(1,At,1,1,"p",7),e.YNc(2,It,1,1,"p",7),e.YNc(3,kt,2,2,"p",1),e.BQk()),2&t){const n=o.$implicit;e.xp6(1),e.Q6J("ngIf",!n.codeid&&!n.isShortCode),e.xp6(1),e.Q6J("ngIf",!n.codeid&&n.isShortCode),e.xp6(1),e.Q6J("ngIf",n.codeConfig)}}function wt(t,o){if(1&t&&(e.ynx(0),e.TgZ(1,"h3",5,6),e._uU(3),e.qZA(),e.YNc(4,Dt,4,3,"ng-container",2),e.BQk()),2&t){const n=e.oxw().$implicit,s=e.oxw();e.xp6(1),e.cQ8("id","",null==s.chapter?null:s.chapter.category,"-ch-",null==s.chapter?null:s.chapter.chid,"-sec-",null==n?null:n.secid,""),e.xp6(2),e.hij(" ",n.subtitle," "),e.xp6(1),e.Q6J("ngForOf",null==n?null:n.paragraphs)}}function Pt(t,o){if(1&t&&(e.ynx(0),e.YNc(1,wt,5,5,"ng-container",1),e.BQk()),2&t){const n=o.$implicit,s=e.oxw();e.xp6(1),e.Q6J("ngIf",n.secid===+s.secid)}}let i=(()=>{class t extends h.H{constructor(n,s,Nt,Bt,St,Ft,Lt,Mt){super(n,s,Nt,Bt,St,Ft,Lt,Mt),this.codeData=c}ngOnInit(){super.ngOnInit()}ngOnDestroy(){super.ngOnDestroy()}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(u.X),e.Y36(d.Dx),e.Y36(Et.t4),e.Y36(d.H7),e.Y36(r.F0),e.Y36(r.gz),e.Y36(a.Ye),e.Y36(_.p))},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-js-chapter"]],features:[e.qOj],decls:5,vars:2,consts:[[1,"chapter-container"],[4,"ngIf"],[4,"ngFor","ngForOf"],[1,"navigator-container"],["h2",""],[3,"id"],["h3s",""],[3,"innerHTML",4,"ngIf"],[3,"innerHTML"],[3,"lang","codeConfig"]],template:function(n,s){1&n&&(e.TgZ(0,"div",0),e.YNc(1,Tt,2,1,"ng-container",1),e.YNc(2,Pt,2,1,"ng-container",2),e.TgZ(3,"div",3),e._UZ(4,"app-chapter-navigator"),e.qZA()()),2&n&&(e.xp6(1),e.Q6J("ngIf","1"===s.secid),e.xp6(1),e.Q6J("ngForOf",null==s.chapter?null:s.chapter.sections))},dependencies:[a.sg,a.O5,Ct.R,xt.V],styles:[".chapter-container[_ngcontent-%COMP%]{margin:1rem}"]}),t})();const Jt=[{path:"",component:p,children:[{path:"chapter",component:i},{path:"chapter/:chid",component:i},{path:"chapter/:chid/section/:secid",component:i},{path:"**",component:i},{path:"",component:i}]}];let Yt=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.Bz.forChild(Jt),r.Bz]}),t})(),Ht=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[a.ez,Yt,u.I]}),t})()}}]);