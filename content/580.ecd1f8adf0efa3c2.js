"use strict";(self.webpackChunkweb_building=self.webpackChunkweb_building||[]).push([[580],{7580:(yt,_,r)=>{r.r(_),r.d(_,{JsBookModule:()=>_t});var i={};r.r(i),r.d(i,{js_2_4_1:()=>g,js_2_4_10:()=>D,js_2_4_10_1:()=>Y,js_2_4_11:()=>H,js_2_4_11_1:()=>N,js_2_4_1_1:()=>y,js_2_4_2:()=>f,js_2_4_2_1:()=>j,js_2_4_3:()=>b,js_2_4_3_1:()=>x,js_2_4_4:()=>v,js_2_4_4_1:()=>C,js_2_4_5:()=>O,js_2_4_5_1:()=>A,js_2_4_6:()=>E,js_2_4_6_1:()=>T,js_2_4_7:()=>J,js_2_4_7_1:()=>I,js_2_4_8:()=>k,js_2_4_8_1:()=>w,js_2_4_9:()=>F,js_2_4_9_1:()=>P,js_2_7_1:()=>_e,js_2_7_2:()=>ue,js_2_7_3:()=>me,js_2_7_4:()=>pe,js_2_7_5:()=>de,js_2_7_6:()=>he,js_2_7_7:()=>ge,js_2_7_8:()=>ye,js_2_7_9:()=>fe,js_3_1_1:()=>S,js_3_1_1_1:()=>B,js_3_1_2:()=>V,js_3_1_2_1:()=>L,js_3_1_3:()=>M,js_3_1_3_1:()=>Q,js_3_1_4:()=>Z,js_3_1_4_1:()=>R,js_3_1_5:()=>U,js_3_1_5_1:()=>$,js_3_1_6:()=>z,js_3_1_6_1:()=>W,js_3_1_7:()=>X,js_3_1_7_1:()=>G,js_3_2_1:()=>K,js_3_2_2:()=>q,js_3_2_3:()=>ee,js_3_2_3_1:()=>te,js_3_2_4:()=>ne,js_3_2_4_1:()=>oe,js_3_2_5:()=>se,js_3_2_5_1:()=>re,js_3_2_6:()=>ae,js_3_2_6_1:()=>ce,js_3_2_7:()=>le,js_3_2_7_1:()=>ie,js_4_2_1:()=>je,js_4_2_10:()=>Je,js_4_2_2:()=>be,js_4_2_3:()=>xe,js_4_2_4:()=>ve,js_4_2_5:()=>Ce,js_4_2_6:()=>Oe,js_4_2_7:()=>Ae,js_4_2_8:()=>Ee,js_4_2_9:()=>Te,js_4_3_1:()=>Ie,js_4_3_2:()=>ke,js_4_3_3:()=>we,js_4_3_4:()=>Fe,js_4_3_5:()=>Pe,js_5_2_1:()=>De,js_5_2_1_1:()=>Ye,js_5_2_2:()=>He,js_5_3_1:()=>Ne,js_5_3_2:()=>Se,js_5_4_1:()=>Be,js_7_1_1:()=>Ve,js_7_1_2:()=>Le,js_7_1_3:()=>Me,js_7_2_1:()=>Qe,js_7_2_2:()=>Ze,js_7_2_3:()=>Re,js_7_3_1:()=>Ue,js_7_3_2:()=>$e,js_7_3_3:()=>ze,js_7_3_4:()=>We,js_8_2_1:()=>Xe});var l=r(6895),a=r(9299),e=r(4650),u=r(4214);let d=(()=>{class t{constructor(n){this.coreService=n}ngOnInit(){this.coreService.getJsBookData()}ngOnDestroy(){}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(u.p))},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-js-book"]],decls:1,vars:0,template:function(n,s){1&n&&e._UZ(0,"router-outlet")},dependencies:[a.lC]}),t})();var h=r(9117);const g="if (condition) {\n  // code to be executed if the condition is true\n} else {\n  // code to be executed if the condition is false\n}",y='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let number = 10;\n\n    if (number > 0) {\n      console.log("The number is positive.");\n    } else {\n      console.log("The number is zero or negative.");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',f="if (condition1) {\n  // code to be executed if condition1 is true\n} else if (condition2) {\n  // code to be executed if condition2 is true\n} else {\n  // code to be executed if all conditions are false\n}",j='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let num = -10;\n\n    if (num > 0) {\n      console.log("The number is positive.");\n    } else if (num < 0) {\n      console.log("The number is negative.");\n    } else {\n      console.log("The number is zero.");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',b="switch (expression) {\n  case value1:\n    // code to be executed if expression matches value1\n    break;\n  case value2:\n    // code to be executed if expression matches value2\n    break;\n  default:\n    // code to be executed if no case matches the expression\n}",x='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Conditional Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let day = "Thursday";\n\n    switch (day) {\n      case "Monday":\n        console.log("It\'s Monday!");\n        break;\n      case "Tuesday":\n        console.log("It\'s Tuesday!");\n        break;\n      case "Wednesday":\n        console.log("It\'s Wednesday!");\n        break;\n      case "Thursday":\n        console.log("It\'s Thursday!");\n        break;\n      case "Friday":\n        console.log("It\'s Friday!");\n        break;\n      default:\n        console.log("It\'s the weekend!");\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',v="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n}",C='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 1; i <= 5; i++) {\n      console.log("Iteration " + i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',O="while (condition) {\n  // code to be executed as long as the condition is true\n}",A='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let count = 1;\n\n    while (count <= 5) {\n      console.log("Iteration " + count);\n      count++;\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',E="do {\n  // code to be executed at least once\n} while (condition);",T='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let count = 1;\n\n    do {\n      console.log("Iteration " + count);\n      count++;\n    } while (count <= 5);\n  <\/script>\n</head>\n<body>\n</body>\n</html>',J="for (variable in object) {\n  // code to be executed for each property\n}",I='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const person = {\n      name: "John",\n      age: 30,\n      city: "New York"\n    };\n    \n    for (let key in person) {\n      console.log(key + ": " + person[key]);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',k="for (variable of iterable) {\n  // code to be executed for each element\n}",w='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Structure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const fruits = ["apple", "banana", "orange"];\n\n    for (let fruit of fruits) {\n      console.log(fruit);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',F="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n  break;\n  // code to be executed in each iteration\n}",P='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 0; i < 10; i++) {\n      if (i === 5) {\n        break; // exit the loop when i is 5\n      }\n      console.log(i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',D="for (initialization; condition; increment/decrement) {\n  // code to be executed in each iteration\n  continue;\n  // code to be executed in each iteration\n}",Y='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    for (let i = 0; i < 10; i++) {\n      if (i === 5) {\n        continue; // skip the iteration when i is 5\n      }\n      console.log(i);\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',H="for (variable of iterable) {\n  // code to be executed for each element\n  return;\n  // code to be executed for each element\n}",N='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Loop Control Statement Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function findNumber(array, target) {\n      for (let num of array) {\n        if (num === target) {\n          return true; // exit the function and return true if target is found\n        }\n      }\n      return false; // return false if target is not found\n    }\n\n    console.log(findNumber([1, 2, 3, 4, 5], 3));\n  <\/script>\n</head>\n<body>\n</body>\n</html>',S="function functionName(parameter1, parameter2, ...) {\n  // code to be executed\n  return result; // optional\n}",B='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Definition Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function greet(name) {\n      const message = "Hello, " + name + "!";\n    \n      return message;\n    }\n  <\/script>\n</head>\n<body>\n</body>\n</html>',V="functionName(argument1, argument2, ...);",L='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Call Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function greet(name) {\n      const message = "Hello, " + name + "!";\n    \n      return message;\n    }\n\n    // Calling the function\n    const result = greet("John");\n    console.log(result); // Output: Hello, John!\n  <\/script>\n</head>\n<body>\n</body>\n</html>',M='// Global variable\nlet globalVariable = "I\'m a global variable";\n\nfunction exampleFunction() {\n  // Local variable\n  let localVariable = "I\'m a local variable";\n}',Q='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Scope Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    // Global variable\n    let globalVariable = "I\'m a global variable";\n    \n    function exampleFunction() {\n      // Local variable\n      let localVariable = "I\'m a local variable";\n    \n      console.log(globalVariable); // Accessing the global variable\n      console.log(localVariable); // Accessing the local variable\n    }\n    \n    exampleFunction(); // Calling the function\n    \n    console.log(globalVariable); // Accessing the global variable outside the function\n    // console.log(localVariable); // This will result in an error since localVariable is not accessible outside the function\n  <\/script>\n</head>\n<body>\n</body>\n</html>',Z="let anonymousFunction = function(parameter1, parameter2) {\n  // code to be executed\n};",R='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Anonymous Function Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let anonymousFunction = function(parameter1, parameter2) {\n      // code to be executed\n      console.log("Parameters:", parameter1, parameter2);\n      console.log("Executing the anonymous function");\n    };\n    \n    // Calling the anonymous function\n    anonymousFunction("Hello", "World");\n  <\/script>\n</head>\n<body>\n</body>\n</html>',U="function outerFunction() {\n  let outerVariable = \"I'm an outer variable\";\n\n  function innerFunction() {\n    console.log(outerVariable); // Accessing the outer variable from the inner function\n  }\n\n  return innerFunction;\n}\n\n// Creating a closure by calling the outer function and assigning the returned inner function to a variable\nlet closure = outerFunction();\n\n// Calling the inner function, which still has access to the outer variable\nclosure(); // Output: I'm an outer variable",$='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Function Closure Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    function outerFunction() {\n      let outerVariable = "I\'m an outer variable";\n    \n      function innerFunction() {\n        console.log(outerVariable); // Accessing the outer variable from the inner function\n      }\n    \n      return innerFunction;\n    }\n    \n    // Creating a closure by calling the outer function and assigning the returned inner function to a variable\n    let closure = outerFunction();\n    \n    // Calling the inner function, which still has access to the outer variable\n    closure(); // Output: I\'m an outer variable\n  <\/script>\n</head>\n<body>\n</body>\n</html>',z="const functionName = (parameter1, parameter2) => {\n  // code to be executed\n  return result; // optional\n};",W='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Arrow Function Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    const sum = (num1, num2) => {\n      return num1 + num2;\n    };\n    \n    console.log(sum(2, 3)); // Output: 5\n  <\/script>\n</head>\n<body>\n</body>\n</html>',X="(function() {\n  // code to be executed immediately\n})();",G='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>IIFE Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    (function(name) {\n      console.log("Hello, " + name + "!");\n    })("John");\n  <\/script>\n</head>\n<body>\n</body>\n</html>',K="// Using array literal syntax\nlet myArray = [1, 2, 3, 4, 5];",q="// Using Array constructor\nlet myArray = new Array(1, 2, 3, 4, 5);",ee="let myArray = [1, 2, 3, 4, 5];\n\nconsole.log(myArray[0]); // Output: 1\nconsole.log(myArray[2]); // Output: 3",te='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    console.log(myArray[0]); // Output: 1\n    console.log(myArray[2]); // Output: 3\n  <\/script>\n</head>\n<body>\n</body>\n</html>',ne="let myArray = [1, 2, 3, 4, 5];\n\nmyArray[2] = 10;\nconsole.log(myArray); // Output: [1, 2, 10, 4, 5]",oe='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    myArray[2] = 10;\n    console.log(myArray); // Output: [1, 2, 10, 4, 5]\n  <\/script>\n</head>\n<body>\n</body>\n</html>',se="let myArray = [1, 2, 3, 4, 5];\nconsole.log(myArray.length); // Output: 5\n\nmyArray.length = 3;\nconsole.log(myArray); // Output: [1, 2, 3]",re='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n    console.log(myArray.length); // Output: 5\n    \n    myArray.length = 3;\n    console.log(myArray); // Output: [1, 2, 3]\n  <\/script>\n</head>\n<body>\n</body>\n</html>',ae="let myArray = [1, 2, 3];\n\nmyArray.push(4); // Adds 4 at the end\nconsole.log(myArray); // Output: [1, 2, 3, 4]\n\nlet removedElement = myArray.pop(); // Removes the last element and returns it\nconsole.log(myArray); // Output: [1, 2, 3]\nconsole.log(removedElement); // Output: 4\n\nmyArray.unshift(0); // Adds 0 at the beginning\nconsole.log(myArray); // Output: [0, 1, 2, 3]\n\nlet shiftedElement = myArray.shift(); // Removes the first element and returns it\nconsole.log(myArray); // Output: [1, 2, 3]\nconsole.log(shiftedElement); // Output: 0",ce='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3];\n\n    myArray.push(4); // Adds 4 at the end\n    console.log(myArray); // Output: [1, 2, 3, 4]\n    \n    let removedElement = myArray.pop(); // Removes the last element and returns it\n    console.log(myArray); // Output: [1, 2, 3]\n    console.log(removedElement); // Output: 4\n    \n    myArray.unshift(0); // Adds 0 at the beginning\n    console.log(myArray); // Output: [0, 1, 2, 3]\n    \n    let shiftedElement = myArray.shift(); // Removes the first element and returns it\n    console.log(myArray); // Output: [1, 2, 3]\n    console.log(shiftedElement); // Output: 0\n  <\/script>\n</head>\n<body>\n</body>\n</html>',le="let myArray = [1, 2, 3, 4, 5];\n\nfor (let i = 0; i < myArray.length; i++) {\n  console.log(myArray[i]);\n}\n\nmyArray.forEach(function(element) {\n  console.log(element);\n});",ie='<!DOCTYPE html>\n<html lang="en">\n<head>\n  <title>Array Operation Example</title>\n  <script src="assets/js/utils.js"><\/script>\n  <script>\n    let myArray = [1, 2, 3, 4, 5];\n\n    for (let i = 0; i < myArray.length; i++) {\n      console.log(myArray[i]);\n    }\n\n    myArray.forEach(function(element) {\n      console.log(element);\n    });\n  <\/script>\n</head>\n<body>\n</body>\n</html>',_e='// Using object literal syntax\nlet person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};',ue='// Using Object constructor\nlet person = new Object();\nperson.name = "John";\nperson.age = 30;\nperson.profession = "Developer";',me='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nconsole.log(person.name); // Output: John\nconsole.log(person[\'age\']); // Output: 30',pe='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nperson.age = 35;\nperson[\'profession\'] = "Engineer";',de='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nperson.city = "New York";',he='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\ndelete person.profession;',ge='let person = {\n  name: "John",\n  age: 30,\n  sayHello: function() {\n    console.log("Hello!");\n  }\n};\n\nperson.sayHello(); // Output: Hello!',ye='let person = {\n  name: "John",\n  age: 30,\n  profession: "Developer"\n};\n\nfor (let key in person) {\n  console.log(key + ": " + person[key]);\n}\n\nlet keys = Object.keys(person);\nfor (let i = 0; i < keys.length; i++) {\n  let key = keys[i];\n  console.log(key + ": " + person[key]);\n}',fe='function Person(name, age) {\n  this.name = name;\n  this.age = age;\n  this.sayHello = function() {\n    console.log("Hello, my name is " + this.name);\n  };\n}\n\nlet john = new Person("John", 30);\njohn.sayHello(); // Output: Hello, my name is John',je="let element = document.getElementById('elementId');",be="let elements = document.getElementsByClassName('className');",xe="let elements = document.getElementsByTagName('tagName');",ve="let element = document.querySelector('selector');\nlet elements = document.querySelectorAll('selector');",Ce="element.innerHTML = 'New HTML content';\nelement.textContent = 'New text content';",Oe="let value = element.getAttribute('attributeName');\nelement.setAttribute('attributeName', 'attributeValue');",Ae="element.style.property = 'value';",Ee="element.classList.add('className');\nelement.classList.remove('className');",Te="let newElement = document.createElement('tagName');\nlet newText = document.createTextNode('Text content');",Je="parentElement.appendChild(newElement);\nparentElement.removeChild(childElement);",Ie="element.addEventListener('eventName', eventHandler);",ke="function eventHandler(event) {\n  // Event handling code\n}",we="element.removeEventListener('eventName', eventHandler);",Fe='<button onclick="eventHandler(event)">Click me</button>',Pe="// Fetch data from the server\nfetch('https://api.example.com/data')\n  .then(response => response.json())\n  .then(data => {\n    // DOM manipulation\n    const container = document.getElementById('data-container');\n\n    // Create a new list element for each data item\n    data.forEach(item => {\n      const listItem = document.createElement('li');\n      listItem.textContent = item.name;\n      container.appendChild(listItem);\n    });\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });",De="function callbackFunction(result) {\n  // Code to be executed when the callback is invoked\n}\n\n// Passing callbackFunction as a callback to another function\nsomeFunction(callbackFunction);",Ye='function doSomething(callback) {\n  // Perform some operations\n  console.log("Doing something...");\n\n  // Simulating an asynchronous operation with setTimeout\n  setTimeout(function() {\n    // Completed the asynchronous operation\n    console.log("Operation completed!");\n\n    // Invoke the callback function\n    callback();\n  }, 2000); // Wait for 2 seconds\n}\n\nfunction callbackFunction() {\n  console.log("Callback function called!");\n}\n\n// Call the doSomething function and pass the callback function as an argument\ndoSomething(callbackFunction);',He="function callbackFunction(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // Process the result\n  }\n}",Ne='function fetchData() {\n  return new Promise(function(resolve, reject) {\n    // Simulating an asynchronous operation with setTimeout\n    setTimeout(function() {\n      // Simulating a successful response\n      const data = { message: "Data successfully fetched!" };\n\n      // Resolve the promise with the data\n      resolve(data);\n      \n      // Simulating an error scenario\n      // reject(new Error("Failed to fetch data!"));\n    }, 2000); // Wait for 2 seconds\n  });\n}',Se="promise\n.then(result => {\n  // Process the result\n  return transformedResult;\n})\n.then(transformedResult => {\n  // Process the transformed result\n})\n.catch(error => {\n  // Handle any errors along the chain\n});",Be="async function fetchData() {\n  try {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}",Ve="function outerFunction() {\n  let outerVariable = 'I am outside!';\n\n  if (true) {\n    let innerVariable = 'I am inside!';\n    console.log(innerVariable); // Output: I am inside!\n    console.log(outerVariable); // Output: I am outside!\n  }\n\n  console.log(innerVariable); // Error: innerVariable is not defined\n}\n\nouterFunction();",Le="function outerFunction() {\n  var outerVariable = 'I am in the outer function!';\n\n  function innerFunction() {\n    var innerVariable = 'I am in the inner function!';\n    console.log(innerVariable); // Output: I am in the inner function!\n    console.log(outerVariable); // Output: I am in the outer function!\n  }\n\n  return innerFunction;\n}\n\nvar closure = outerFunction();\nclosure();",Me="function createCounter() {\n  var count = 0; // Private variable\n\n  function increment() {\n    count++;\n    console.log('Count:', count);\n  }\n\n  function decrement() {\n    count--;\n    console.log('Count:', count);\n  }\n\n  return {\n    increment: increment, // Public interface\n    decrement: decrement // Public interface\n  };\n}\n\nvar counter = createCounter();\ncounter.increment(); // Output: Count: 1\ncounter.increment(); // Output: Count: 2\ncounter.decrement(); // Output: Count: 1",Qe="// Creating a prototype object\nvar animalPrototype = {\n  sound: 'Unknown',\n  makeSound: function() {\n    console.log(this.sound);\n  }\n};\n\n// Creating a new object using the prototype\nvar dog = Object.create(animalPrototype);\ndog.sound = 'Woof';\n\n// Accessing property and method via prototype chain\ndog.makeSound(); // Output: Woof\n\n// Creating another object using the same prototype\nvar cat = Object.create(animalPrototype);\ncat.sound = 'Meow';\n\ncat.makeSound(); // Output: Meow",Ze="// Constructor function \n function Person(name, age) { \n   this.name = name; \n   this.age = age; \n } \n \n // Adding a method to the prototype \n Person.prototype.introduce = function() { \n   console.log(`Hi, my name is ${this.name}, and I am ${this.age} years old.`); \n }; \n \n // Creating objects using the constructor function \n var person1 = new Person('Alice', 25); \n var person2 = new Person('Bob', 30); \n \n // Accessing properties and calling the inherited method \n console.log(person1.name); // Output: Alice \n console.log(person2.age); // Output: 30 \n \n person1.introduce(); // Output: Hi, my name is Alice, and I am 25 years old. \n person2.introduce(); // Output: Hi, my name is Bob, and I am 30 years old.",Re="// ES6 class syntax \n class Person { \n   constructor(name, age) { \n     this.name = name; \n     this.age = age; \n   } \n   \n   introduce() { \n     console.log(`Hi, my name is ${this.name}, and I am ${this.age} years old.`); \n   } \n } \n \n // Creating objects using the class \n var person1 = new Person('Alice', 25); \n var person2 = new Person('Bob', 30); \n \n // Accessing properties and calling the method \n console.log(person1.name); // Output: Alice \n console.log(person2.age); // Output: 30 \n \n person1.introduce(); // Output: Hi, my name is Alice, and I am 25 years old. \n person2.introduce(); // Output: Hi, my name is Bob, and I am 30 years old.",Ue="// Pure function\nfunction addNumbers(a, b) {\n  return a + b;\n}\n\n// Calling the pure function\nvar result = addNumbers(3, 5);\nconsole.log(result); // Output: 8",$e="// Immutable data\nconst originalArray = [1, 2, 3, 4, 5];\n\n// Creating a new array with an updated value\nconst updatedArray = [...originalArray, 6];\n\n// Output the original and updated arrays\nconsole.log(originalArray); // Output: [1, 2, 3, 4, 5]\nconsole.log(updatedArray); // Output: [1, 2, 3, 4, 5, 6]",ze="// Higher-order function example: map\nfunction map(array, transform) {\n  var transformedArray = [];\n  \n  for (var i = 0; i < array.length; i++) {\n    transformedArray.push(transform(array[i]));\n  }\n  \n  return transformedArray;\n}\n\n// Example usage of the higher-order function\nvar numbers = [1, 2, 3, 4, 5];\nvar doubledNumbers = map(numbers, function(num) {\n  return num * 2;\n});\n\nconsole.log(doubledNumbers); // Output: [2, 4, 6, 8, 10]",We="// Example functions for function composition\nfunction add(a, b) {\n  return a + b;\n}\n\nfunction multiply(a, b) {\n  return a * b;\n}\n\nfunction square(x) {\n  return x * x;\n}\n\n// Function composition example\nfunction compose(...functions) {\n  return function(input) {\n    return functions.reduceRight(function(result, fn) {\n      return fn(result);\n    }, input);\n  };\n}\n\n// Compose the functions\nvar composedFunction = compose(square, multiply.bind(null, 3), add.bind(null, 2));\n\n// Apply the composed function to an input\nvar result = composedFunction(4);\nconsole.log(result); // Output: 324",Xe="try {\n  // Code that might throw an error\n} catch (error) {\n  // Handle the error\n  console.error('Error:', error);\n}";var m=r(294),p=r(1481),Ge=r(3353),Ke=r(7913),qe=r(5342);function et(t,o){if(1&t&&(e.TgZ(0,"h2",null,4),e._uU(2),e.qZA()),2&t){const n=e.oxw(2);e.xp6(2),e.AsE("",null==n.chapter?null:n.chapter.chid,". ",null==n.chapter?null:n.chapter.title,"")}}function tt(t,o){if(1&t&&(e.ynx(0),e.YNc(1,et,3,2,"h2",1),e.BQk()),2&t){const n=e.oxw();e.xp6(1),e.Q6J("ngIf",null==n.chapter?null:n.chapter.chid)}}function nt(t,o){if(1&t&&e._UZ(0,"p",8),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.Q6J("innerHTML",s.bypass(null==n?null:n.text),e.oJD)}}function ot(t,o){if(1&t&&e._UZ(0,"p",8),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.Q6J("innerHTML",s.bypass(null==n?null:n.text),e.oJD)}}function st(t,o){if(1&t&&(e.TgZ(0,"p"),e._UZ(1,"app-code-viewer",9),e.qZA()),2&t){const n=e.oxw().$implicit,s=e.oxw(3);e.xp6(1),e.Q6J("lang","JS")("codeConfig",s.rectify(n.codeConfig))}}function rt(t,o){if(1&t&&(e.ynx(0),e.YNc(1,nt,1,1,"p",7),e.YNc(2,ot,1,1,"p",7),e.YNc(3,st,2,2,"p",1),e.BQk()),2&t){const n=o.$implicit;e.xp6(1),e.Q6J("ngIf",!n.codeid&&!n.isShortCode),e.xp6(1),e.Q6J("ngIf",!n.codeid&&n.isShortCode),e.xp6(1),e.Q6J("ngIf",n.codeConfig)}}function at(t,o){if(1&t&&(e.ynx(0),e.TgZ(1,"h3",5,6),e._uU(3),e.qZA(),e.YNc(4,rt,4,3,"ng-container",2),e.BQk()),2&t){const n=e.oxw().$implicit,s=e.oxw();e.xp6(1),e.cQ8("id","",null==s.chapter?null:s.chapter.category,"-ch-",null==s.chapter?null:s.chapter.chid,"-sec-",null==n?null:n.secid,""),e.xp6(2),e.hij(" ",n.subtitle," "),e.xp6(1),e.Q6J("ngForOf",null==n?null:n.paragraphs)}}function ct(t,o){if(1&t&&(e.ynx(0),e.YNc(1,at,5,5,"ng-container",1),e.BQk()),2&t){const n=o.$implicit,s=e.oxw();e.xp6(1),e.Q6J("ngIf",n.secid===+s.secid)}}let c=(()=>{class t extends h.H{constructor(n,s,ut,mt,pt,dt,ht,gt){super(n,s,ut,mt,pt,dt,ht,gt),this.codeData=i}ngOnInit(){super.ngOnInit()}ngOnDestroy(){super.ngOnDestroy()}}return t.\u0275fac=function(n){return new(n||t)(e.Y36(m.X),e.Y36(p.Dx),e.Y36(Ge.t4),e.Y36(p.H7),e.Y36(a.F0),e.Y36(a.gz),e.Y36(l.Ye),e.Y36(u.p))},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-js-chapter"]],features:[e.qOj],decls:5,vars:2,consts:[[1,"chapter-container"],[4,"ngIf"],[4,"ngFor","ngForOf"],[1,"navigator-container"],["h2",""],[3,"id"],["h3s",""],[3,"innerHTML",4,"ngIf"],[3,"innerHTML"],[3,"lang","codeConfig"]],template:function(n,s){1&n&&(e.TgZ(0,"div",0),e.YNc(1,tt,2,1,"ng-container",1),e.YNc(2,ct,2,1,"ng-container",2),e.TgZ(3,"div",3),e._UZ(4,"app-chapter-navigator"),e.qZA()()),2&n&&(e.xp6(1),e.Q6J("ngIf","1"===s.secid),e.xp6(1),e.Q6J("ngForOf",null==s.chapter?null:s.chapter.sections))},dependencies:[l.sg,l.O5,Ke.R,qe.V],styles:[".chapter-container[_ngcontent-%COMP%]{margin:1rem}"]}),t})();const lt=[{path:"",component:d,children:[{path:"chapter",component:c},{path:"chapter/:chid",component:c},{path:"chapter/:chid/section/:secid",component:c},{path:"**",component:c},{path:"",component:c}]}];let it=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[a.Bz.forChild(lt),a.Bz]}),t})(),_t=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[l.ez,it,m.I]}),t})()}}]);