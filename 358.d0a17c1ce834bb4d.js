"use strict";(self.webpackChunkweb_building=self.webpackChunkweb_building||[]).push([[358],{1358:(B_,i,a)=>{a.r(i),a.d(i,{SassBookModule:()=>C_});var n={};a.r(n),a.d(n,{sass_1_2_1:()=>d,sass_1_2_2:()=>p,sass_1_3_1:()=>u,sass_1_3_2:()=>m,sass_1_3_3:()=>b,sass_1_3_4:()=>x,sass_1_3_5:()=>h,sass_1_3_6:()=>$,sass_2_1_1:()=>g,sass_2_1_2:()=>f,sass_2_1_3:()=>w,sass_2_1_4:()=>y,sass_2_1_5:()=>v,sass_2_1_6:()=>k,sass_2_1_7:()=>z,sass_2_1_8:()=>S,sass_2_2_1:()=>C,sass_2_2_1_1:()=>B,sass_2_2_2:()=>O,sass_2_2_2_1:()=>A,sass_2_2_3:()=>E,sass_2_2_3_1:()=>M,sass_2_2_4:()=>D,sass_2_2_4_1:()=>F,sass_2_2_5:()=>H,sass_2_2_5_1:()=>I,sass_2_3_1:()=>j,sass_2_3_1_1:()=>J,sass_2_3_2:()=>L,sass_2_3_2_1:()=>P,sass_2_3_3:()=>R,sass_2_3_3_1:()=>K,sass_2_3_4:()=>T,sass_2_3_4_1:()=>U,sass_2_3_5:()=>X,sass_2_3_5_1:()=>Z,sass_2_4_1:()=>Q,sass_2_4_1_1:()=>Y,sass_2_4_2:()=>G,sass_2_4_3:()=>N,sass_2_4_4:()=>V,sass_2_4_5:()=>W,sass_2_5_1:()=>q,sass_2_5_1_1:()=>ss,sass_2_5_2:()=>_s,sass_2_5_2_1:()=>as,sass_2_5_3:()=>os,sass_2_5_3_1:()=>es,sass_2_5_4:()=>ts,sass_2_5_4_1:()=>ns,sass_3_1_1:()=>rs,sass_3_1_1_1:()=>is,sass_3_1_2:()=>cs,sass_3_1_2_1:()=>ls,sass_3_1_3:()=>ds,sass_3_1_3_1:()=>ps,sass_3_1_4:()=>us,sass_3_1_4_1:()=>ms,sass_3_2_1:()=>bs,sass_3_2_2:()=>xs,sass_3_2_2_1:()=>hs,sass_3_2_3:()=>$s,sass_3_2_4:()=>gs,sass_3_2_4_1:()=>fs,sass_3_2_5:()=>ws,sass_3_2_5_1:()=>ys,sass_3_2_6:()=>vs,sass_3_2_7:()=>ks,sass_3_2_7_1:()=>zs,sass_3_2_8:()=>Ss,sass_3_2_9:()=>Cs,sass_3_2_9_1:()=>Bs,sass_3_3_1:()=>Os,sass_3_3_1_1:()=>As,sass_3_3_2:()=>Es,sass_3_3_2_1:()=>Ms,sass_3_4_1:()=>Ds,sass_3_4_1_1:()=>Fs,sass_3_4_2:()=>Hs,sass_3_4_2_1:()=>Is,sass_3_4_3:()=>js,sass_3_4_3_1:()=>Js,sass_3_4_4:()=>Ls,sass_3_4_4_1:()=>Ps,sass_3_5_1:()=>Rs,sass_3_5_1_1:()=>Ks,sass_3_5_2:()=>Ts,sass_3_5_2_1:()=>Us,sass_3_5_3:()=>Xs,sass_3_5_3_1:()=>Zs,sass_3_5_4:()=>Qs,sass_3_5_4_1:()=>Ys,sass_3_5_5:()=>Gs,sass_3_5_5_1:()=>Ns,sass_3_5_6:()=>Vs,sass_3_5_6_1:()=>Ws,sass_3_6_1:()=>qs,sass_3_6_2:()=>s_,sass_3_6_3:()=>__,sass_3_6_4:()=>a_,sass_3_7_1:()=>o_,sass_3_7_1_1:()=>e_,sass_3_7_2:()=>t_,sass_3_7_2_1:()=>n_,sass_3_7_3:()=>r_,sass_3_7_3_1:()=>i_,sass_3_7_4:()=>c_,sass_3_7_4_1:()=>l_,sass_3_7_5:()=>d_,sass_3_7_5_1:()=>p_,sass_3_7_6:()=>u_,sass_3_7_6_1:()=>m_,sass_3_7_7:()=>b_,sass_3_7_7_1:()=>x_,sass_4_1_1:()=>h_,sass_4_1_2:()=>$_,sass_4_1_3:()=>g_,sass_4_2_1:()=>f_,sass_4_2_2:()=>w_});var l=a(6895),r=a(9299);const d="/* Example SASS Syntax code */\n.navigation\n  ul\n    margin: 0\n    padding: 0\n    list-style: none\n  li\n    display: inline-block",p="/* Example SCSS Syntax code */\n.navigation {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  li {\n    display: inline-block;\n  }\n}",u="node -v\nnpm -v",m="npm install -g sass",b="sass --version",x="my-project/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 scss/\n\u2502   \u2502   \u251c\u2500\u2500 abstracts/\n\u2502   \u2502   \u251c\u2500\u2500 base/\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 layout/\n\u2502   \u2502   \u251c\u2500\u2500 pages/\n\u2502   \u2502   \u2514\u2500\u2500 main.scss\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2514\u2500\u2500 ...",h="sass src/scss/main.scss dist/css/main.css",$="sass --watch src/scss/main.scss dist/css/main.css",g="$font-size: 16px;\n$line-height: 1.5;\n$percentage: 100%;",f="$font-family-1: 'Helvetica, Arial, sans-serif';\n$font-family-2: Helvetica, Arial, sans-serif;",w="$primary-color: blue;\n$secondary-color: #FF5733;\n$tertiary-color: rgba(0, 0, 0, 0.5);",y="$is-active: true;\n$is-hidden: false;",v="$unset-value: null;",k="$single-list: 1px 2px 3px 4px;\n$comma-separated-list: Helvetica, Arial, sans-serif;\n$multidimensional-list: (1px 2px, 3px 4px);",z="$color-map: (primary: blue, secondary: red);",S="$variable: 10;\n$variable: 20 !default; // $variable will still be 10",C="$font-size: 16px;\n$font-family: Arial, sans-serif;\n\nbody {\n  font-size: $font-size;\n  font-family: $font-family;\n}",B="body {\n  font-size: 16px;\n  font-family: Arial, sans-serif;\n}",O="$global-variable: 10px;\n\n.element {\n  width: $global-variable * 2;\n}",A=".element {\n  width: 20px;\n}",E=".element {\n  $local-variable: 20px;\n  width: $local-variable;\n}",M=".element {\n  width: 20px;\n}",D="$variable: 10px;\n\n.element {\n  $variable: 20px;\n\n  width: $variable; // Output will be 'width: 20px;'\n}",F=".element {\n  width: 20px;\n}",H="$variable: 10px;\n\n.element {\n  $variable: 20px !global;\n  width: $variable; // Output will be 'width: 20px;'\n}\n\n.another-element {\n  width: $variable; // Output will be 'width: 20px;'\n}",I=".element {\n  width: 20px;\n}\n\n.another-element {\n  width: 20px;\n}",j="$color: green;\n\n.my-#{color}-box {\n  background-color: $color;\n}",J=".my-green-box {\n  background-color: green;\n}",L="$border-direction: 'bottom';\n$size: 1px;\n\n.border-#{str-slice($border-direction, 0, 3)}-#{$size} {\n  border-#{$border-direction}: $size solid black;\n}",P=".border-bot-1px {\n  border-bottom: 1px solid black;\n}",R="$theme: light;\n\n.button {\n  background-color: #{if($theme == light, white, black)};\n}",K=".button {\n  background-color: white;\n}",T="$property: 'transition';\n$prefix: 'webkit';\n\n.-#{$prefix}-#{$property} {\n  -#{$prefix}-#{$property}: all 0.3s ease;\n}",U=".-webkit-transition {\n  -webkit-transition: all 0.3s ease;\n}",X="$image-name: 'icon';\n$url-path: '/images/';\n\n.background {\n  background-image: url('#{$url-path}#{$image-name}.png');\n}",Z=".background {\n  background-image: url('/images/icon.png');\n}",Q="$base-size: 16px;\n\n.element {\n  font-size: $base-size + 2px; // 18px\n  padding: $base-size - 4px; // 12px\n  width: $base-size * 2; // 32px\n  height: $base-size / 2; // 8px\n  line-height: 10 % 3; // 1\n}",Y=".element {\n  font-size: 18px;\n  padding: 12px;\n  width: 32px;\n  height: 8px;\n  line-height: 1;\n}",G="$theme: 'light';\n$class-name: 'button' + '-' + $theme; // 'button-light'",N="$is-large: $base-size >= 20px; // false",V="$is-same: $base-size == 16px; // true\n$is-not-same: $base-size != 18px; // true",W="$is-valid: true;\n$is-active: false;\n\n$should-apply-styles: $is-valid and not $is-active; // true",q="@for $i from 1 through 3 {\n  .font-size-#{$i} {\n    font-size: $i * 2 + 10px;\n  }\n}",ss=".font-size-1 {\n  font-size: 12px;\n}\n\n.font-size-2 {\n  font-size: 14px;\n}\n\n.font-size-3 {\n  font-size: 16px;\n}",_s="$colors: (red: #f00, green: #0f0, blue: #00f);\n\n@each $name, $color in $colors {\n  .#{$name}-text {\n    color: $color;\n  }\n}",as=".red-text {\n  color: #f00;\n}\n\n.green-text {\n  color: #0f0;\n}\n\n.blue-text {\n  color: #00f;\n}",os="$i: 6;\n@while $i > 0 {\n  .item-#{$i} {\n    width: 2em * $i;\n  }\n  $i: $i - 2;\n}",es=".item-6 {\n  width: 12em;\n}\n\n.item-4 {\n  width: 8em;\n}\n\n.item-2 {\n  width: 4em;\n}",ts="$theme: light;\n\n.button {\n  @if $theme == light {\n    background-color: #fff;\n    color: #000;\n  } @else if $theme == dark {\n    background-color: #000;\n    color: #fff;\n  } @else {\n    background-color: #ccc;\n    color: #333;\n  }\n}",ns=".button {\n  background-color: #fff;\n  color: #000;\n}",rs=".navbar {\n  background: #333;\n  \n  .nav-item {\n    display: inline-block;\n    margin: 10px;\n    \n    a {\n      text-decoration: none;\n      color: white;\n    }\n  }\n}",is=".navbar {\n  background: #333;\n}\n.navbar .nav-item {\n  display: inline-block;\n  margin: 10px;\n}\n.navbar .nav-item a {\n  text-decoration: none;\n  color: white;\n}",cs=".button {\n  background: blue;\n  \n  &:hover {\n    background: darkblue;\n  }\n}",ls=".button {\n  background: blue;\n}\n.button:hover {\n  background: darkblue;\n}",ds=".box {\n  font: {\n    family: Arial, sans-serif;\n    size: 16px;\n    weight: bold;\n  };\n}",ps=".box {\n  font-family: Arial, sans-serif;\n  font-size: 16px;\n  font-weight: bold;\n}",us=".container {\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 750px;\n  }\n\n  @media (min-width: 992px) {\n    width: 970px;\n  }\n}",ms=".container {\n  width: 100%;\n}\n@media (min-width: 768px) {\n  .container {\n    width: 750px;\n  }\n}\n@media (min-width: 992px) {\n  .container {\n    width: 970px;\n  }\n}",bs="@mixin reset-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}",xs="ul {\n  @include reset-list;\n}",hs="ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}",$s="@mixin text-shadow($x: 1px, $y: 1px, $blur: 1px, $color: #000) {\n  text-shadow: $x $y $blur $color;\n}",gs="h1 {\n  @include text-shadow(2px, 2px, 2px, #333);\n}",fs="h1 {\n  text-shadow: 2px 2px 2px #333;\n}",ws="h1 {\n  @include text-shadow;\n}",ys="h1 {\n  text-shadow: 1px 1px 1px #000;\n}",vs="@mixin box-shadow($shadows...) {\n  box-shadow: $shadows;\n}",ks=".box {\n  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);\n}",zs=".box {\n  box-shadow: 0px 4px 5px #666, 2px 6px 10px #999;\n}",Ss="@mixin media-query($device-width) {\n  @media screen and (max-width: $device-width) {\n    @content;\n  }\n}",Cs="@include media-query(768px) {\n  body {\n    background-color: blue;\n  }\n}",Bs="@media screen and (max-width: 768px) {\n  body {\n    background-color: blue;\n  }\n}",Os="// Base Class\n.message {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: black;\n}\n\n// Inheriting Base Class\n.success {\n  @extend .message;\n  border-color: green;\n}\n\n// Inheriting Base Class\n.error {\n  @extend .message;\n  border-color: red;\n}",As=".message, .error, .success {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: black;\n}\n\n.success {\n  border-color: green;\n}\n\n.error {\n  border-color: red;\n}",Es="// Placeholder\n%message-shared {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: black;\n}\n\n// Extending Placeholder\n.success {\n  @extend %message-shared;\n  border-color: green;\n}\n\n// Extending Placeholder\n.error {\n  @extend %message-shared;\n  border-color: red;\n}",Ms=".error, .success {\n  border: 1px solid #ccc;\n  padding: 10px;\n  color: black;\n}\n\n.success {\n  border-color: green;\n}\n\n.error {\n  border-color: red;\n}",Ds="@function square($num) {\n  @return $num * $num;\n}\n\n:root {\n  --square: #{square(3)}; // Call square function\n}",Fs=".root {\n  --square: 9;\n}",Hs="@function area($length, $width: $length) {\n  @return $length * $width;\n}\n\n:root {\n  --area1: #{area(2)}; // Call area function with default value\n  --area2: #{area(2, 5)}; // Call area function with 2 values\n}",Is=":root {\n  --area1: 4;\n  --area2: 10;\n}",js="@function average($numbers...) {\n  $sum: 0;\n  $count: length($numbers);\n  @each $num in $numbers {\n    $sum: $sum + $num;\n  }\n  @return $sum / $count;\n}\n\n:root {\n  --average: #{average(1, 2, 3, 4, 5)}; // Call average function\n}",Js=":root {\n  --average: 3;\n}",Ls="@function custom-darken($color, $amount) {\n  $red: red($color);\n  $green: green($color);\n  $blue: blue($color);\n  $red: max(0, min(255, $red - ($red * $amount / 100)));\n  $green: max(0, min(255, $green - ($green * $amount / 100)));\n  $blue: max(0, min(255, $blue - ($blue * $amount / 100)));\n  @return rgb($red, $green, $blue);\n}\n\n.button {\n  background-color: custom-darken(blue, 20%);\n}",Ps=".button {\n  background-color: blue;\n}",Rs=".box {\n  background-color: lighten(red, 10%); // Lightens red by 10%\n}",Ks=".box {\n  background-color: #ff3333;\n}",Ts=".content {\n  content: str-insert('Hello', ' world', 6); // Output: 'Hello world'\n}",Us=".content {\n  content: 'Hello world';\n}",Xs=".box {\n  width: round(15.25px); // Output: width: 15px;\n}",Zs=".box {\n  width: 15px;\n}",Qs=".box {\n  $my-list: 10px 20px 30px;\n  width: nth($my-list, 2); // Output: width: 20px;\n}",Ys=".box {\n  width: 20px;\n}",Gs=".box {\n  $my-map: ( 'width': 100px, 'height': 200px );\n  height: map-get($my-map, 'height'); // Output: height: 200px;\n}",Ns=".box {\n  height: 200px;\n}",Vs=".box {\n  width: if(true, 100px, 200px); // Output: width: 100px;\n}",Ws=".box {\n  width: 100px;\n}",qs="// _variables.scss\n$primary-color: #333;\n$secondary-color: #ccc;",s_="// main.scss\n@import 'variables';",__="styles/\n|-- base/\n|   |-- _reset.scss\n|   |-- _typography.scss\n|-- components/\n|   |-- _buttons.scss\n|   |-- _cards.scss\n|-- utilities/\n|   |-- _variables.scss\n|   |-- _mixins.scss\n|-- main.scss",a_="// main.scss\n@import 'base/reset';\n@import 'base/typography';\n@import 'components/buttons';\n@import 'components/cards';\n@import 'utilities/variables';\n@import 'utilities/mixins';",o_="@use 'sass:math';\n\ndiv {\n  width: math.div(100%, 3);  // division\n}",e_="div {\n  width: 33.3333333333%;\n}",t_="@use 'sass:string';\n\n.button {\n  content: string.to-upper-case('click me'); // CLICK ME\n}",n_=".button {\n  content: 'CLICK ME';\n}",r_="@use 'sass:color';\n\n.button {\n  background-color: color.scale(red, $lightness: 20%);\n}",i_=".button {\n  background-color: #ff3333;\n}",c_="@use 'sass:list';\n\n$my-list: list.append((red, green), blue);\n\n.button {\n  background-color: list.nth($my-list, 3);\n}",l_=".button {\n  background-color: blue;\n}",d_="@use 'sass:map';\n\n$my-map: map.merge(('color': red), ('width': 100px));\n\n.button {\n  background-color: map.get($my-map, 'color');\n  width: map.get($my-map, 'width');\n}",p_=".button {\n  background-color: red;\n  width: 100px;\n}",u_="@use 'sass:selector';\n\n$new-selector: selector.parse('.new-selector');\n\n.container {\n  @at-root #{ $new-selector } {\n    color: blue;\n  }\n}",m_=".new-selector {\n  color: blue;\n}",b_="@use 'sass:meta';\n\n$type: meta.type-of(42);  // Output: 'number'",x_="",h_="// Example\n@import 'variables';\n@import 'mixins';\n@import 'reset';",$_="$primary-color: #333;",g_="// -------------------------------------\n// Section: Button Styles\n// -------------------------------------",f_="$my-variable: 42;\n@debug $my-variable; // Output: 42",w_="$my-variable: 42;\n\n@if unitless($my-variable) {\n  @warn 'Expected $my-variable to have a unit.'; // Output: 'Expected $my-variable to have a unit.'\n}";var o=a(4650),y_=a(7809);let t=(()=>{class s{constructor(){this.bookData=n}}return s.\u0275fac=function(_){return new(_||s)},s.\u0275cmp=o.Xpm({type:s,selectors:[["app-sass-chapter"]],decls:1,vars:1,consts:[[3,"bookData"]],template:function(_,c){1&_&&o._UZ(0,"app-chapter",0),2&_&&o.Q6J("bookData",c.bookData)},dependencies:[y_.l]}),s})();var v_=a(4214);const k_=[{path:"",component:(()=>{class s{constructor(_){this.coreService=_}ngOnInit(){this.coreService.getSassBookData()}ngOnDestroy(){}}return s.\u0275fac=function(_){return new(_||s)(o.Y36(v_.p))},s.\u0275cmp=o.Xpm({type:s,selectors:[["app-sass-book"]],decls:1,vars:0,template:function(_,c){1&_&&o._UZ(0,"router-outlet")},dependencies:[r.lC]}),s})(),children:[{path:"chapter",component:t},{path:"chapter/:chid",component:t},{path:"chapter/:chid/section/:secid",component:t},{path:"**",component:t},{path:"",component:t}]}];let z_=(()=>{class s{}return s.\u0275fac=function(_){return new(_||s)},s.\u0275mod=o.oAB({type:s}),s.\u0275inj=o.cJS({imports:[r.Bz.forChild(k_),r.Bz]}),s})();var S_=a(1375);let C_=(()=>{class s{}return s.\u0275fac=function(_){return new(_||s)},s.\u0275mod=o.oAB({type:s}),s.\u0275inj=o.cJS({imports:[l.ez,S_.I,z_]}),s})()}}]);