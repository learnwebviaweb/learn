"use strict";(self.webpackChunkweb_building=self.webpackChunkweb_building||[]).push([[414],{6414:(ln,i,s)=>{s.r(i),s.d(i,{TsBookModule:()=>_n});var _={};s.r(_),s.d(_,{ts_10_1_1:()=>pe,ts_10_1_2:()=>me,ts_10_1_3:()=>ye,ts_10_2_1:()=>de,ts_10_2_1_1:()=>be,ts_10_2_2:()=>he,ts_10_2_2_1:()=>we,ts_10_2_3:()=>Ce,ts_10_2_3_1:()=>Be,ts_10_2_4:()=>Ee,ts_10_3_1:()=>Ie,ts_10_3_2:()=>fe,ts_10_3_3:()=>De,ts_10_4_1:()=>Te,ts_10_4_2:()=>Se,ts_10_4_3:()=>Qe,ts_10_4_4:()=>ke,ts_10_4_5:()=>Ne,ts_11_1_1:()=>xe,ts_11_1_1_1:()=>Me,ts_11_2_1:()=>Ue,ts_11_2_1_1:()=>Fe,ts_11_2_2:()=>Re,ts_11_2_2_1:()=>Ye,ts_11_2_3:()=>ve,ts_11_2_3_1:()=>Le,ts_11_2_4:()=>He,ts_11_2_4_1:()=>Ge,ts_12_1_1:()=>Oe,ts_12_1_10:()=>Ze,ts_12_1_2:()=>Ke,ts_12_1_3:()=>Pe,ts_12_1_4:()=>je,ts_12_1_5:()=>Je,ts_12_1_6:()=>We,ts_12_1_7:()=>Ve,ts_12_1_8:()=>ze,ts_12_1_9:()=>qe,ts_12_2_1:()=>Xe,ts_12_2_2:()=>$e,ts_12_2_3:()=>tn,ts_13_1_1:()=>en,ts_13_1_2:()=>nn,ts_1_3_1:()=>p,ts_1_3_2:()=>m,ts_1_3_3:()=>y,ts_1_3_4:()=>d,ts_1_3_5:()=>b,ts_1_3_6:()=>h,ts_2_1_1:()=>w,ts_2_1_2:()=>C,ts_2_1_3:()=>B,ts_2_1_4:()=>E,ts_2_1_4_1:()=>I,ts_2_1_5:()=>f,ts_2_2_1:()=>D,ts_2_2_2:()=>T,ts_2_2_3:()=>S,ts_2_2_4:()=>Q,ts_2_2_4_1:()=>k,ts_2_2_5:()=>N,ts_2_2_6:()=>x,ts_2_3_1:()=>M,ts_2_3_2:()=>U,ts_2_3_3:()=>F,ts_2_4_1:()=>R,ts_2_4_2:()=>Y,ts_2_4_3:()=>v,ts_3_1_1:()=>L,ts_3_1_2:()=>H,ts_3_1_3:()=>G,ts_3_1_4:()=>O,ts_3_1_5:()=>K,ts_3_1_5_1:()=>P,ts_3_1_6:()=>j,ts_3_1_7:()=>J,ts_3_2_1:()=>W,ts_3_2_2:()=>V,ts_3_2_3:()=>z,ts_3_2_4:()=>q,ts_3_2_5:()=>Z,ts_3_2_6:()=>X,ts_3_2_7:()=>$,ts_4_1_1:()=>tt,ts_4_1_2:()=>et,ts_4_1_3:()=>nt,ts_4_1_4:()=>st,ts_4_1_5:()=>ot,ts_4_2_1:()=>rt,ts_4_2_1_1:()=>at,ts_4_2_2:()=>_t,ts_4_2_2_1:()=>lt,ts_4_2_3:()=>it,ts_4_2_3_1:()=>At,ts_4_2_4:()=>ct,ts_5_1_1:()=>gt,ts_5_1_2:()=>ut,ts_5_1_2_1:()=>pt,ts_5_1_3:()=>mt,ts_5_1_4:()=>yt,ts_5_1_5:()=>dt,ts_5_1_6:()=>bt,ts_5_1_7:()=>ht,ts_5_2_1:()=>wt,ts_5_2_2:()=>Ct,ts_5_2_3:()=>Bt,ts_5_2_3_1:()=>Et,ts_5_2_4:()=>It,ts_5_2_4_1:()=>ft,ts_6_1_1:()=>Dt,ts_6_1_2:()=>Tt,ts_6_1_3:()=>St,ts_6_1_4:()=>Qt,ts_6_2_1:()=>kt,ts_6_2_2:()=>Nt,ts_6_2_3:()=>xt,ts_6_2_4:()=>Mt,ts_6_2_5:()=>Ut,ts_6_2_6:()=>Ft,ts_7_1_1:()=>Rt,ts_7_1_2:()=>Yt,ts_7_2_1:()=>vt,ts_7_2_2:()=>Lt,ts_7_2_3:()=>Ht,ts_7_2_4:()=>Gt,ts_7_2_5:()=>Ot,ts_8_1_1:()=>Kt,ts_8_1_2:()=>Pt,ts_8_1_3:()=>jt,ts_8_1_4:()=>Jt,ts_8_1_5:()=>Wt,ts_8_1_5_1:()=>Vt,ts_8_1_6:()=>zt,ts_8_1_7:()=>qt,ts_8_2_1:()=>Zt,ts_8_2_1_1:()=>Xt,ts_8_2_2:()=>$t,ts_8_2_2_1:()=>te,ts_8_2_3:()=>ee,ts_8_2_3_1:()=>ne,ts_8_2_4:()=>se,ts_8_2_4_1:()=>oe,ts_9_2_1:()=>re,ts_9_2_2:()=>ae,ts_9_2_3:()=>_e,ts_9_2_4:()=>le,ts_9_3_1:()=>ie,ts_9_3_2:()=>Ae,ts_9_3_3:()=>ce,ts_9_3_4:()=>ge,ts_9_3_4_1:()=>ue});var c=s(6895),l=s(9299),o=s(4650),g=s(4214);let u=(()=>{class t{constructor(n){this.coreService=n}ngOnInit(){this.coreService.getTsBookData()}ngOnDestroy(){}}return t.\u0275fac=function(n){return new(n||t)(o.Y36(g.p))},t.\u0275cmp=o.Xpm({type:t,selectors:[["app-ts-book"]],decls:1,vars:0,template:function(n,A){1&n&&o._UZ(0,"router-outlet")},dependencies:[l.lC]}),t})();function e(t){return`<!DOCTYPE html>\n  <html>\n  <head>\n    <style>\n      html { font-size: 16px; }\n      a { text-decoration: none; }\n    </style>\n  </head>\n  <body>\n    <br/><p><a href="${t}" target="_blank">Go to TS Playground.</a></p>\n  </body>\n  </html>`}const p="npm install -g typescript",m="npm init -y",y="function greet(name: string) { \n  return `Hello, ${name}!`; \n} \n\nconst message = greet('TypeScript'); \nconsole.log(message);",d="tsc main.ts",b="node main.js",h="tsc main.ts --watch",w="let age: number = 25;\nlet price: number = 49.99;",C="let firstName: string = 'John';\nlet lastName: string = 'Doe';",B="let isActive: boolean = true;\nlet isStudent: boolean = false;",E="const mySymbol: symbol = Symbol('description');\n\nconst obj = {\n  [mySymbol]: 'This is a value associated with the symbol'\n};\n\nconsole.log(obj[mySymbol]); // 'This is a value associated with the symbol'",I=e("https://www.typescriptlang.org/play?ts=5.1.6#code/MYewdgzgLgBAtgTwMoLgIxAGwFwwqjTGAXhhXSwAoAiAEwFMJgAnASwAcpXxqBKAbgCwAKBgjQkWCDQArEjADeImDADaicoQC6uagBUAFqwgxjMAIYwAbucwBXehYgQQwVuaj1aMAO6soBjABjvgUmNQiAL5CouLgLpj0AHSYIADmlNIy6sgEWFoCMAD0RTD6RiZmljb2jubOru6e3n4BQQYheeEiQA"),f="let age: number = '25'; // Error: Type 'string' is not assignable to type 'number'.",D="let myUndefined: undefined = undefined;",T="let myNull: null = null;",S="let myAny: any = 'Hello, TypeScript!';",Q="let myUnknown: unknown = 'Hello, TypeScript!';\nif (typeof myUnknown === 'string') {\n    console.log(myUnknown.length);\n}",k=e("https://www.typescriptlang.org/play?ts=5.1.6#code/DYUwLgBAtgngqgOwNYIPYHcEC4IFdlqYQC8EA5ABIjDCoA0EAKjAA4gDKAxgE4CWLYAIRkA3AFgAULwBmEABRhWIVLNiIUGBCWKkyAZzB8EAczIBKCAG9JEWxE6oEe1KAB0tY3LUFN7kCbAACzNxCQBfIA"),N="function throwError(message: string): never {\n  throw new Error(message);\n}",x="const uniqueKey: unique symbol = Symbol('unique property');\nconst obj = {\n  [uniqueKey]: 'This is a value associated with the unique symbol'\n};",M="let age: number = 25;\nlet firstName: string = 'John';\nlet isActive: boolean = true;",U="const pi: number = 3.14159;\nconst greeting: string = 'Hello, TypeScript!';",F="const name: string = 'Alice';\nname = 'Bob'; // Error: Cannot assign to 'name' because it is a constant.",R="let age: number = 25; // age is explicitly annotated as type number \nfunction greet(name: string): string { \n  return `Hello, ${name}!`; \n}",Y="let temperature = 30; // TypeScript infers temperature as type 'number'\nconst appName = 'MyApp'; // TypeScript infers appName as type 'string'",v="let age: number = 25; // Type annotation\nlet name = 'Alice'; // Type inference",L="let numbers: number[] = [1, 2, 3, 4, 5];\nlet names: string[] = ['Alice', 'Bob', 'Charlie'];",H="let temperatures = [25, 30, 22]; // TypeScript infers temperatures as number[]",G="let fruits: string[] = ['apple', 'banana', 'orange'];\nlet firstFruit: string = fruits[0]; // 'apple'\nlet secondFruit: string = fruits[1]; // 'banana'",O="let numbers: number[] = [1, 2, 3, 4, 5];\nlet length: number = numbers.length; // Property 'length' is inferred as number\nnumbers.push(6); // push() method is type-checked for number[]\nlet poppedNumber: number | undefined = numbers.pop(); // pop() method returns a number or undefined if the array is empty",K="let colors: string[] = ['red', 'green', 'blue'];\n\nfor (let i = 0; i < colors.length; i++) {\n  console.log(colors[i]);\n}\n\ncolors.forEach(color => {\n  console.log(color);\n});\n\nfor (let color of colors) {\n  console.log(color);\n}",P=e("https://www.typescriptlang.org/play?ts=5.1.6#code/DYUwLgBAxg9sMCcDOAuCSwIJYDsDmA2gLoQC8EBA5AiACaUA0EleNIOjzARsAK4iUiAbgCwAKHEAzRBAAUoSFjIQADEIhKAPNDiIkAOlD4wAC3VYA1BYCUEAN7iIOnEjghDMPLNjxkBLETWomIAvuLiPnr60ggAogCGUCbeughkAHz2js6uoB5ekQhB4iHFEmIxcgo6vhAwkjV6tg5iTrAubvkpvmUhQA"),j="let mixedArray: (number | string)[] = [1, 'two', 3, 'four'];",J="let readOnlyArray: readonly number[] = [1, 2, 3];\nreadOnlyArray.push(4); // Error: Property 'push' does not exist on type 'readonly number[]'",W="let person: [string, number] = ['Alice', 30];",V="let name: string = person[0]; // 'Alice'\nlet age: number = person[1]; // 30",z="let coordinate = [10, 20]; // TypeScript infers coordinate as [number, number]",q="function getCoordinates(): [number, number] {\n  return [10, 20];\n}\n\nlet [x, y] = getCoordinates();",Z="let optionalTuple: [string, number?] = ['Alice'];",X="let multiValueTuple: [string, ...number[]] = ['Alice', 1, 2, 3];",$="let measurements: [string, number][] = [['height', 180], ['weight', 75]];",tt="function add(a: number, b: number): number {\n  return a + b;\n}",et="let mathFunction: (x: number, y: number) => number;\nmathFunction = add;",nt="function processValue(input: string): string;\nfunction processValue(input: number): number;\nfunction processValue(input: string | number): string | number {\n  if (typeof input === 'string') {\n    return input.toUpperCase();\n  } else {\n    return input * 2;\n  }\n}",st="function doSomething(callback: (result: string) => void) {\n  const result = 'Finished';\n  callback(result);\n}",ot="const multiply = (a: number, b: number): number => a * b;",rt="function greet(name: string, age?: number): string { \n  if (age) { \n    return `Hello, ${name}! You are ${age} years old.`; \n  } else { \n    return `Hello, ${name}!`; \n  } \n} \n\nconsole.log(greet('Alice'));           // Output: Hello, Alice! \nconsole.log(greet('Bob', 30));         // Output: Hello, Bob! You are 30 years old.",at=e("https://www.typescriptlang.org/play?ts=5.1.6#code/GYVwdgxgLglg9mABAcwE4FN1QBRgIYC26AXIgM5SoxjIA0iey6A-KWCAQEbqoCUpFKjUQBvRAFgAUIkQxgibI3S9RE6TMQYoIVEgAGACXQAbY3HoASEfiIBfAISIAmnBAMMiK0tuIAnujxUMkQ4YwATADo9AG41GR8TMnRVKQ1NLB19I1NzT2tCdAcYuMQfKTLpKQgEMlD0CLNkbDRMHAByAEFjGAh0Nt5eWLThxAB6UcQAeRAoAAcZ0myzei6e9EcqmrqGuCaWrGw2gCE4Tjb6AGYABgGhkbGJ6bmFxCXck85HFzdA5Ou-AJBELhCJSIA"),_t="function introduce(name: string, role: string = 'user'): string { \n  return `My name is ${name} and I am a ${role}.`; \n} \n\nconsole.log(introduce('Alice'));       // Output: My name is Alice and I am a user. \nconsole.log(introduce('Bob', 'admin')); // Output: My name is Bob and I am an admin.",lt=e("https://www.typescriptlang.org/play?ts=5.1.6#code/JAMwrgdgxgLglgewgAjhGAnBATMUCmAFBAIYC2+AXMgM6ZoDmANMlgDZW30QPIC8yAORga+DIICU1OhkbIA3sgCwAKGSt8MMBhQADALIBPZKQqoayACTzT+AL7ISEbMgCSjso6vz29gHS6ANzKKg6qIVBINAgcfmwIDIRomDh4RIIAgmxwBJISweqFyAD0xcgA8mAwAA5V1EYm5PjmyFk5zU4u7uReImJ+EVEx+HEJSehYuASEggBCCABGgiyCJNhkaHnBpRVVtTD1xrYt8wuOzm4e547raH6qQA"),it="function greetUser(firstName: string, lastName?: string, title: string = 'Mr.'): string { \n  if (lastName) { \n    return `Hello, ${title} ${firstName} ${lastName}!`; \n  } else { \n    return `Hello, ${title} ${firstName}!`; \n  } \n} \n\nconsole.log(greetUser('John'));                   // Output: Hello, Mr. John! \nconsole.log(greetUser('Alice', 'Smith'));          // Output: Hello, Mr. Alice Smith! \nconsole.log(greetUser('Bob', undefined, 'Dr.'));  // Output: Hello, Dr. Bob!",At=e("https://www.typescriptlang.org/play?ts=5.1.6#code/JAMwrgdgxgLglgewgAgOYCcCmmYFUDOm6AFCHOvjAHICGAtpgFzKXpwSoA0yANjZbQYB+Zq3Zdk8GDyYsYbDsgC8yAOQBZdADpVASlHzxyAN7IAsAChkyOCGTE+A+pl0nzV68iwww6FAAMACUweHgRuABJjKRkAX2QosgpqZ3ioxxSGWIBCfwBud2t4kMI3S08vHF8A4NDwhOi4aUw04ySnLNyC8uR4yz6rSygkfAQZLTDUYgxsPEISVQApBAALCD1dAortnc8Aej3kAHkwGAAHU+ZasO5NLWRltez3YYhR8cnprBwCImJVACCPDgUEwqm4qgAynQmisNltdsgDsdThcYFcQjdkHdkECQZhkNDYc8hiMxpgJggpjMfvN-gAhBAAI3ByEgABNMGQIJh2RCACLaeHWZEnc6XZDXeqC+6MpnZIA"),ct="function sumNumbers(...numbers: number[]): number {\n  return numbers.reduce((total, num) => total + num, 0);\n}",gt="class MyClass {\n  // Properties and methods go here\n}",ut="class Person {\n  constructor(public firstName: string, public lastName: string) {}\n}\n\nconst person = new Person('John', 'Doe');\nconsole.log(person.firstName); // Output: John",pt=e("https://www.typescriptlang.org/play?ts=5.1.6#code/MYGwhgzhAEAKCmAnCB7AdtA3gWAFDWmHQgBdEBXYElRACgAdyAjEAS2GgDNXkSA5MAFt4ALmilErNAHMANNEYt20cKQHCxEqdICUWAL55D+PETSkFSVBgC80NPADucK+loByAFIoAFmnfy7gAiKPDuOgDcpsQoIPAAdCAo0gyuaPHcvOrwkdAA9HnQAPLkJIwkYt5+QA"),mt="class Student {\n  public readonly school: string = 'MountainView School';\n  private studentId: number;\n\n  constructor(studentId: number) {\n    this.studentId = studentId;\n  }\n}",yt="class Circle {\n  private _radius: number;\n\n  constructor(radius: number) {\n    this._radius = radius;\n  }\n\n  get radius(): number {\n    return this._radius;\n  }\n\n  set radius(value: number) {\n    if (value >= 0) {\n      this._radius = value;\n    } else {\n      throw new Error('Radius cannot be negative.');\n    }\n  }\n\n  get area(): number {\n    return Math.PI * this._radius * this._radius;\n  }\n}",dt="class Calculator {\n  public add(a: number, b: number): number {\n    return a + b;\n  }\n}",bt="class MathUtils {\n  static PI: number = 3.14;\n\n  static calculateCircumference(radius: number): number {\n    return 2 * MathUtils.PI * radius;\n  }\n}",ht="class BankAccount {\n  private balance: number;\n\n  constructor(initialBalance: number) {\n    this.balance = initialBalance;\n  }\n\n  public deposit(amount: number): void {\n    this.balance += amount;\n  }\n}",wt="abstract class Shape {\n  // Properties and methods go here\n}",Ct="abstract class Shape {\n  abstract calculateArea(): number;\n}\n\nclass Circle extends Shape {\n  constructor(private radius: number) {\n    super();\n  }\n\n  calculateArea(): number {\n    return Math.PI * this.radius * this.radius;\n  }\n}\n\nclass Square extends Shape {\n  constructor(private sideLength: number) {\n    super();\n  }\n\n  calculateArea(): number {\n    return this.sideLength * this.sideLength;\n  }\n}",Bt="class Parent {\n  greet(): void {\n    console.log('Hello from Parent');\n  }\n}\n\nclass Child extends Parent {\n  greet(): void {\n    console.log('Hello from Child');\n  }\n}",Et=e("https://www.typescriptlang.org/play?ts=5.1.6#code/MYGwhgzhAEAKYCcCmA7ALtA3gWAFDWgHNkk0AKASgC5oA3AewEsATLPAg4elCekJAHQh6hMgHIAEkhDDoAMwT0AtnESo0YigG520AL54D+PKEgwAwgAtGIVkgAeaVMxjxk6NviIly1Ok1YcL05uXn4hEXEpGXp5RRUrG2ZNHS8jPSA"),It="const circle = new Circle(5);\nconsole.log(circle.calculateArea()); // Output: 78.53981633974483\n\nconst square = new Square(4);\nconsole.log(square.calculateArea()); // Output: 16\n\nconst child = new Child();\nchild.greet(); // Output: Hello from Child",ft=e("https://www.typescriptlang.org/play?ts=5.1.6#code/IYIwzgLgTsDGEAJYBthjAgygC2ABwFMEBvAWACgEFRIZ4lhlYBXVCAgQSgOAAoBKAFwIAdswC2IAlADcFAL4UKKNBgDCASygoiBAB7sRAEww58RMpSQB7EbWbxrUXnigaAbsHYIYRjczBhMUlpfhIKKiowZkJnfjkrRXIIhiZWL05uPiFRCSkocKsqbghmKBEEAFkvbAA6AAUASQQAKgQIbA0wWt9-DDaOrp7gPwCEqiSk5VR0LABHZmBuBH1DEyxcQkKqWFt7R2dXDwyEMA0jAgAZAhEAcw6gvNDtyOjYgXGEKatYRhY2TI8ASPEIFSyRHwEUrldqdbpnC7XO4dVqwoYIq43e7YT6TJTkFSzepLG6IcEIW7cKHAhDuaznF47PbWZAEWrIay3XgAIgAEgRkByEAAzKDWcQIYncEQQbnxFJ45IEmbqTrIIwrAw3dZS0kvSkEak5OkM8lMuwstkcrl8gVC0XihBqNVGOW4hT43Z2RCwLQ6BAAXlEBAA7k6-azeABWeUE5ms9mc3i+7QJ35pAFcIH8eIIAD0eYQAHlmBA8KXhAB2AActSjAGYAJzVgCMADZ603KwAWbvV+uevaIMALEmB4NhzCj7i8buxr1gS2JrkjxbcWrp-4ZLPZXMF4ul8sQYTtwfepAu8ciUNOl0fZQu2oGo0yfOFktlisIfmC6wisUSs6GjqhQQA"),Dt="interface Person {\n  firstName: string;\n  lastName: string;\n  age: number;\n  greet(): string;\n}",Tt="class Employee implements Person { \n  firstName: string; \n  lastName: string; \n  age: number; \n  \n  constructor(firstName: string, lastName: string, age: number) { \n    this.firstName = firstName; \n    this.lastName = lastName; \n    this.age = age; \n  } \n  \n  greet() { \n    return `Hello, my name is ${this.firstName} ${this.lastName}.`; \n  } \n}",St="interface Book {\n  title: string;\n  author: string;\n  pages?: number; // Optional property\n}",Qt="interface Circle {\n  readonly radius: number;\n}",kt="type Age = number;\ntype Name = string;\n\nlet age: Age = 25;\nlet name: Name = 'Alice';",Nt="type Person = {\n  firstName: string;\n  lastName: string;\n  age: number;\n};\n\nlet person: Person = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n};",xt="type ID = string | number;\ntype Point = { x: number; y: number };\ntype PointWithLabel = Point & { label: string };",Mt="type MathFunction = (x: number, y: number) => number;\n\nlet add: MathFunction = (a, b) => a + b;",Ut="type ReadonlyPerson = Readonly<Person>;\ntype OptionalPerson = Partial<Person>;",Ft="type Wrapper<T> = { value: T };\n\nlet stringWrapper: Wrapper<string> = { value: 'Hello' };\nlet numberWrapper: Wrapper<number> = { value: 42 };",Rt="let value: any = 'Hello, TypeScript!';\nlet length: number = (<string>value).length;",Yt="let value: any = 'Hello, TypeScript!';\nlet length: number = (value as string).length;",vt="function castToType<T>(value: any): T {\n  return value as T;\n}\n\nlet stringValue: string = castToType<string>('Hello');",Lt="function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nlet value: any = 'Hello';\nif (isString(value)) {\n  let length: number = value.length;\n}",Ht="function isStringArray(value: any[]): value is string[] {\n  return value.every(item => typeof item === 'string');\n}\n\nlet array: any[] = ['Hello', 'World'];\nif (isStringArray(array)) {\n  let firstItem: string = array[0];\n}",Gt="type StringOrNumber = string | number;\n\nlet value: StringOrNumber = 'Hello';\nlet length: number = (value as string).length; // Type assertion",Ot="type StringOrNumber = string | number;\n\nlet value: StringOrNumber = 'Hello';\nif (typeof value === 'string') {\n  let length: number = value.length; // No type assertion needed\n}",Kt="enum Color {\n  Red,\n  Green,\n  Blue,\n}",Pt="let myColor: Color = Color.Green;",jt="enum Direction {\n  Up = 'UP',\n  Down = 'DOWN',\n  Left = 'LEFT',\n  Right = 'RIGHT',\n}\n\nlet direction: Direction = Direction.Up;",Jt="enum Status {\n  Active = 'ACTIVE',\n  Inactive = 'INACTIVE',\n  Pending = 'PENDING',\n}",Wt="let currentStatus: Status = Status.Active;\nconsole.log(currentStatus); // Output: 'ACTIVE'",Vt=e("https://www.typescriptlang.org/play?ts=5.1.6#code/KYOwrgtgBAygLgQzmAzlA3gWAFBSgQQGM4BLAN2CgF4oByfAYQBUBJANQFFaAaHPFkAmLlKNWiwByjVpx58oABVAATEiADm1Ogo4SAIpIDic7AF8cOADbA4UQmABOD0HHhJUALliJkaGm98AOiJSCgBuHEIAexAUKOtAyyj1AAp7JxcA1ABKMKgAenyoAHkwOAAHMq96ZnYuHCA"),zt="enum Size {\n  Small = 1,\n  Medium = 2,\n  Large = 3,\n}",qt="enum Fruit {\n  Apple,\n  Banana,\n}\n\nlet fruitName: string = Fruit[1]; // 'Banana'",Zt="enum Color { \n  Red, \n  Green, \n  Blue, \n} \n\nfor (let key in Color) { \n  if (isNaN(Number(key))) { \n      console.log(`Enum member: ${key}, Value: ${Color[key]}`); \n  } \n}",Xt=e("https://www.typescriptlang.org/play?ts=5.1.6#code/KYOwrgtgBAwg9gGzgJygbygWAFBSgJWABMAaLXKAcWWFDJzwCEExh7sBfc8gMxSgAUCYABcoAa2ABPKAEsQsRCgCU6bnJ6DZAZwByAQ10DdkAEbBkAyVOW21DPI4DGcENsTAAdEgDmAgAYAouDQEMAQ5sgAXFAAJGjWHGQAavoswDHx8EjIANrWALoc-soA3OpcOBw4QA"),$t="enum Direction { \n  Up, \n  Down, \n  Left, \n  Right, \n} \n\nObject.keys(Direction).forEach(key => { \n  if (isNaN(Number(key))) { \n      console.log(`Enum member: ${key}, Value: ${Direction[key as keyof typeof Direction]}`); \n  } \n});",te=e("https://www.typescriptlang.org/play?ts=5.1.6#code/KYOwrgtgBAIglgJ2AYwC5wPYigbygWACgooBVABwBoDjYMB3EaokgGWADNVnaAlOAOYALbjQC+NGgHkARgCsUqAHQBrYAE8AzgAp4SNJhABKJRwwIAogENkQ7WvVQAvAD5ckqHA5RtcTQDkrf21-SBlgBHsNIxj3FhIE5CxNDAAbYCVUjAFtAAMLcGgIYAhwhAAuKAASHAcxagA1K1SwYEqavUVDAG0HKCtNKAcMb1R1cmAR2EQurABdMVyjAG4PCSIxFaIgA"),ee="enum Status { \n  Active, \n  Inactive, \n  Pending, \n} \n\nfor (const value of Object.values(Status)) { \n  console.log(`Enum value: ${value}`); \n}",ne=e("https://www.typescriptlang.org/play?ts=5.1.6#code/KYOwrgtgBAygLgQzmAzlA3lAsAKClAQQGM4BLAN2ABps8oBJEBEi62-ABVABNSQBzGrgC+7XADMA9gCcoACiKSQKOFHIIANmGBRJ4qAHkARgCtgJAHTqtwFHPhJUASicZ2URcskbgFjZP45AAMAUXBoa20ALigAEnRI4GEgpwBuWmFcIA"),se="enum Day {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n\nlet today: Day = Day.Wednesday;\nconsole.log(today); // Output: 3\n\nlet dayName: string = Day[3]; // 'Wednesday'",oe=e("https://www.typescriptlang.org/play?ts=5.1.6#code/KYOwrgtgBAIghgTygbwLACgpQMphAE0QBoMsBZAewONKgBUxgBnQhEzKAdWHxGdfZY6ACzAAnFjQ4AxMQEsBtbHAAu4xegC+GDABtgKqCoqsAXLERQAvBYQA6br36IA3BgDGVJhX13dFAHMACmNWAEoXKAB6KKgAeTAVAAdE8wBmHXR9Q1YAOTgIYHMmFXkQAOtbAG00gF1ImKgAIkc+SQQmjCA"),re="function identity<T>(value: T): T {\n  return value;\n}\n\nconst numberResult = identity(42); // TypeScript infers T as number\nconst stringResult = identity('Hello'); // TypeScript infers T as string",ae="class Box<T> {\n  private value: T;\n\n  constructor(value: T) {\n    this.value = value;\n  }\n\n  getValue(): T {\n    return this.value;\n  }\n}\n\nconst numberBox = new Box<number>(42); // Creates a Box<number> instance\nconst stringBox = new Box<string>('Hello'); // Creates a Box<string> instance",_e="function combineArrays<T, U>(arr1: T[], arr2: U[]): (T | U)[] {\n  return [...arr1, ...arr2];\n}\n\nconst combinedArray = combineArrays([1, 2], ['a', 'b']); // Array of mixed types: [1, 2, 'a', 'b']",le="const explicitResult = identity<number>(42); // Specifies T as number\nconst explicitBox = new Box<string>('Hello'); // Specifies T as string",ie="interface Lengthy {\n  length: number;\n}\n\nfunction logLength<T extends Lengthy>(item: T): void {\n  console.log(item.length);\n}",Ae="interface Printable {\n  print: () => void;\n}\n\nfunction processItem<T extends Lengthy & Printable>(item: T): void {\n  console.log(item.length);\n  item.print();\n}",ce="function getProperty<T, K extends keyof T>(obj: T, key: K): T[K] {\n  return obj[key];\n}\n\nconst person = { name: 'Alice', age: 30 };\nconst name = getProperty(person, 'name'); // Type of name is string\nconst age = getProperty(person, 'age'); // Type of age is number",ge="class Animal { \n  constructor(public name: string) {} \n} \n\nclass Cat extends Animal { \n  meow(): void { \n    console.log('Meow!'); \n  } \n} \n\nfunction adopt<T extends Animal>(animal: T): void { \n  console.log(`You adopted ${animal.name}`); \n} \n\nconst cat = new Cat('Whiskers'); \nadopt(cat); // Outputs: You adopted Whiskers",ue=e("https://www.typescriptlang.org/play?ts=5.1.6#code/MYGwhgzhAECCB2BLAtmE0De0CwAoa0wA9vBAC4BOArsGURQBQAOVARiIsNPGMgKYAuaOQqJ4AcwCUmAL45ccvPNCQYAYTBlofAB5k+8ACYwEKNJnkF+RAO4NJQgG5FEhi0oKESEIiD4A6ECJxBgByAFk+WwBCUMkAbktoRQVLPAAzKnhaRBJoMEMiJjIAHgAVbT0DYzgkVBAAPgYwOrQhModoZ1d3fC9SXwCgkIADAE0iKnzC4r43ABIMFrMQfx5+GRGE+RTlby1gTWgAXm4+G2gNMjCAdQALRAgAaz4KCDjEvAKi68OybYA9ADoAB5KhkFhkCBCCZTb6zNz3R4vN5AA"),pe="type Result = string | number;\n\nlet data: Result;\ndata = 'Hello'; // Valid\ndata = 42;      // Valid\n// data = true; // Error: Type 'boolean' is not assignable to type 'Result'",me="type Person = {\n  firstName: string;\n};\n\ntype Employee = {\n  employeeId: number;\n};\n\ntype EmployeePerson = Person & Employee;\n\nlet employee: EmployeePerson = {\n  firstName: 'Alice',\n  employeeId: 123,\n};",ye="type Value = string | number;\n\ntype Configurable = {\n  readonly id: number;\n};\n\ntype ConfigurableValue = Value & Configurable;",de="function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nlet data: any = 'Hello, TypeScript!';\nif (isString(data)) {\n  // Inside this block, TypeScript knows that 'data' is of type 'string'\n  console.log(data.toUpperCase());\n}",be=e("https://www.typescriptlang.org/play?ts=5.1.6#code/GYVwdgxgLglg9mABDAzgORAWwEYFMBOAFAG4CGANiLgFyKlgCeAlLWZbsiomFnvogG8AsAChEifLigh8SKAwAOuOMERsqiALzbEAch44CugNyiAvqMSjQkWAkQL8cCLhQoAahSokvNRCih8GDAAc0QAH25eAhY1OBgAE0FLZFVCVAxDInVcJiZksXEigHpixABJMBREjigAC1REbHJnAGsAGkQAFUVcAGUIIIUoRFawOAB3LnrSEd0c3U5EFUR5JT0DPl0UosQIBBQ4clwAOhaQn3ZEACpEACYmU0KzRFxyFA5hQt3Siqqa1YNLjNNqdHpKAZDEZjSbTOqzPQLJYrNYcXQBIKhbbfIr7KpHU7nS5UE5QOAAVQUSnwAGFSB9CHknuILCIzEA"),he="function isNumber(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction processValue(value: string | number): void {\n  if (isNumber(value)) {\n      // Inside this block, TypeScript knows that 'value' is of type 'number'\n      console.log(value * 2);\n  } else {\n      // Inside this block, TypeScript knows that 'value' is of type 'string'\n      console.log(value.toUpperCase());\n  }\n}",we=e("https://www.typescriptlang.org/play?ts=5.1.6#code/GYVwdgxgLglg9mABDAzgORAWwEYFMBOAFAG4CGANiLgFyKlgCeAlLWZbsiomFnvogG8AsAChEifLigh8SKAwAOuOMERsqiALzbEAch44CugNyiAvqMSjQkWAkQL8cCLhQoAahSokvNRCih8GDAAc0QAH25eAhY1OBgAE0FLZFVCVAxDInVcJiZksXEigHpixABJMBREjigAC1REbHJnAGsAGkQAFUVcAGUIIIUoRFawOAB3LnrSEd0c3U5EFUR5JT0DPl0UosQIBBQ4clwAOhaQn3ZEACpEACYmU0KzRFxyFA5hQt3Siqqa1YNLjNNqdHpKAZDEZjSbTOqzPQLJYrNYcXQBIKhbbfIr7KpHU7nS5UE5QOAAVQUSnwAGFSB9CHknuILCIzEA"),Ce="function hasNameProperty(obj: any): obj is { name: string } {\n  return 'name' in obj;\n}\n\nlet item: any = { name: 'Book' };\nif (hasNameProperty(item)) {\n  // Inside this block, TypeScript knows that 'item' has a 'name' property of type 'string'\n  console.log(item.name.toUpperCase());\n}",Be=e("https://www.typescriptlang.org/play?ts=5.1.6#code/GYVwdgxgLglg9mABACwIYGcByqC2BTABQCc4AHPIqATwAo4AjAKwC5FUwqBKVhxxGdIgDeiMLjyt0UIjDABzRAF9hAWABQiRETxQQRJAHIx+A-yS8A3OsXrE6gDY7+UPDlbsqiALzDR41gYAQnBwANamilZqMMCINGhY4sRkFNQ0MC44nJyqGogA9PmIAJJg6DAAJniIUMgCiPT2cBChADSIACpU5ADKEDKkUIihYHAA7oK1qEMGGa6mCWyIRuKmpCTklJ5wsdTky1Iy8ga2iBAI6HCOAHRNcumZ18Z411BwAKqkmwDCGHg02SiiiAA"),Ee="function getNameLength(name: string | null): number {\n  // return name.length; // Error: 'name' is possibly 'null'\n\n  return name!.length; // No Error\n}",Ie="T extends U ? X : Y",fe="type Extract<T, U> = T extends U ? T : never;\ntype Exclude<T, U> = T extends U ? never : T;\n\ntype Result1 = Extract<'a' | 'b' | 'c', 'a' | 'c'>; // 'a' | 'c'\ntype Result2 = Exclude<'a' | 'b' | 'c', 'a' | 'c'>; // 'b'",De="type Filter<T> = T extends string ? T : never;\ntype Result = Filter<'a' | 123 | 'b'>; // Result is 'a' | 'b'",Te="type Partial<T> = {\n  [P in keyof T]?: T[P];\n};",Se="type ReadonlyProperties<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\ntype NullableProperties<T> = {\n  [P in keyof T]: T[P] | null;\n};",Qe="type NonOptional<T> = {\n  [P in keyof T]-?: T[P];\n};",ke="interface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\ntype OptionalUser = Partial<User>;\ntype ReadonlyUser = ReadonlyProperties<User>;\ntype NullableUser = NullableProperties<User>;\ntype RequiredUser = NonOptional<User>;",Ne="type Required<T> = {\n  [P in keyof T]-?: T[P];\n};\n\nfunction setDefaults<T>(input: T): Required<T> {\n  const defaults = {} as Required<T>;\n  for (const key in input) {\n    defaults[key] = input[key];\n  }\n  return defaults;\n}\n\nconst defaultUser = setDefaults({ id: 0, name: '', email: '' });",xe="function myClassDecorator(constructor: Function) {\n  console.log('Class decorator called');\n}\n\n@myClassDecorator\nclass MyClass {\n  // Class implementation\n}",Me=e("https://www.typescriptlang.org/play?experimentalDecorators=true&ts=5.1.6#code/GYVwdgxgLglg9mABAWwJ4GEA2BDAzrgEQFMI4AnbKcgClLFyjJGnIC5EAxcaeMASkQBvALAAoRIjq44mIgDpMcAObUA5Fjy5EAExLlK5SdkyztqvgG4xAXzGIxAATQb8xUhSpkxEHPkQBZDF8tEXFEAHpwxBctGGQAB1lkIjAoSl4bIA"),Ue="function prefix(prefixStr: string) {\n  return function(target: Function) {\n    target.prototype.prefix = prefixStr;\n  };\n}\n\n@prefix('My')\nclass Example {\n  // Class implementation\n}\n\nconst example = new Example();\nconsole.log(example.prefix); // Output: 'My'",Fe=e("https://www.typescriptlang.org/play?experimentalDecorators=true&ts=5.1.6#code/GYVwdgxgLglg9mABABwE4FNgwB4Ao2Y4DKUqAXIgM6kxgDmAlIgN4CwAUIohlCKkqEiwEuKAENUddFAoAxcNHhgmbTl0TjJ0gHRo4UfQE9k6XRizZEAXhTnipANwcuAXyfsXzjgAECF3ADkALKGAQwcEAA2YpSUiACi2GIAtsiR6CzOiAD02YgAwtGxiDCp6cnoYOLCYByenBEI1IjoSWUZNmDoAO4JbWnouAzuEE1w6dqRcHS4rSkDZoTYwzl5APIgUMibFMGhHEA"),Re="function logMethod(target: any, key: string, descriptor: PropertyDescriptor) { \n  const originalMethod = descriptor.value; \n  \n  descriptor.value = function (...args: any[]) { \n    console.log(`Calling ${key} with arguments: ${args.join(', ')}`); \n    const result = originalMethod.apply(this, args); \n    console.log(`Method ${key} returned: ${result}`); \n    return result; \n  }; \n  \n  return descriptor; \n} \n\nclass Calculator { \n  @logMethod \n  add(a: number, b: number): number { \n    return a + b; \n  } \n} \n\nconst calculator = new Calculator(); \ncalculator.add(2, 3);",Ye=e("https://www.typescriptlang.org/play?experimentalDecorators=true&ts=5.1.6#code/GYVwdgxgLglg9mABAGzgcwLIFMoAs4AmAFFAIYBOaOAXIqWAJ4A0iA1lg7QM5TkxhoWBLFwh8ADlDjlaABXJxxWclAYAREWJiTpASkQBvRAFgAUIkQQEPRNJhp+pZNjyFEAXkTDREqeQB0AG5OIFgA3CbmkRbeWjoBwcihHoigkLAIiET+ORRoXLT0DADaALr6RmYWFlZgXHDIWP6oaEQABgDCTsj8aIgAJAbsDAC+iADuMHh0lCAAtlhgUAUDBnlc-gBWcPxEAOQse7ojbboRVdW1NuQiIMhQKXYOYE4u+AT+pOLiyAwkuDAuCx1mdopdrA0mi12m83INhmMblAQOQwFgCLRBjcuHcoCdQRcLEiUUhsbjzlERhSLBdiaivJpfNIKWMqmYIMhSFwuIgusgIHdSH5DGCAAItWEEMGkAjEUi0MDzABGyhYSoVyuUug1cxV5BFhMQdKQpEQAGpEErqYhWaZbZErg8IE4BZzhZ40eNeS7BX4iATTM7+b7pJ9ZUQAEwsADMZyAA"),ve="function logProperty(target: any, key: string) { \n  let value = target[key]; \n  \n  const getter = () => { \n    console.log(`Getting value of property ${key}: ${value}`); \n    return value; \n  }; \n  \n  const setter = (newValue: any) => { \n    console.log(`Setting value of property ${key}: ${newValue}`); \n    value = newValue; \n  }; \n  \n  Object.defineProperty(target, key, { \n    get: getter, \n    set: setter, \n    enumerable: true, \n    configurable: true, \n  }); \n} \n\nclass Person { \n  @logProperty \n  name: string = 'Alice'; \n} \n\nconst person = new Person(); \nconsole.log(person.name); \nperson.name = 'Bob';",Le=e("https://www.typescriptlang.org/play?experimentalDecorators=true&ts=5.1.6#code/GYVwdgxgLglg9mABAGzgcwAoCc4AcCmWUAngBRQCGWa+UAXIhWMQDSIDW+xDAzlFjDBoAlIgDeiALAAoRClqIAbhWQh8iALyJK1WgG1OxALoBuKbPNyICPohpQohTYlKiNAPnGW5ia2B5wyPgAdKhopAAGAOK0sEJKKmqIcMCIuDgERMSIACRihgC+DHnKqvgFEcJmMj6IWLQgWEilatUWBW1yNb42UIg8sU5apGD4AO4Aaon4DEzEbp4S3VY2gSFhkQDKsYJoCWXJqel4hCS5+VxF56OT0xVV3nIt6lo3U2WdiB3e3QDyAEYAK3w0GCABN8MBBPhsCcsuQqPY2IY2EsLHJ7Ax7I4sGxlv1aLxBrjHoh8GAQABbQgUf5BBj8NR49E9MBQtCNWn07RYJneAoPGQFSwyCDICg8HiIDCEAJINFyAACYVhmTO3TAFGpvH4u2cAHIAILIGAQfD6trCmqi3ppWUIZw3aX2sCuNp+AJBULoUiZOXBTXUwXSP0IANal6IfUAITg-wtQA"),He="function parameterLogger(target: any, methodName: string, parameterIndex: number) { \n  console.log(`Parameter decorator called on ${methodName} at index ${parameterIndex}`); \n} \n\nclass ExampleClass { \n  greet(@parameterLogger message: string) { \n    console.log(`Hello, ${message}!`); \n  } \n} \n\nconst exampleInstance = new ExampleClass(); \nexampleInstance.greet('World');",Ge=e("https://www.typescriptlang.org/play?experimentalDecorators=true&ts=5.1.6#code/GYVwdgxgLglg9mABABwIYCdUFsCmUfoAycA5iQQBRQblQBciqYAngDSK5QAWcAJgHLYcDAM5R0MMCXZpMnAgEkwvHAA8GYEFgBGBAJSIA3ogCwAKESIICEXAA2OAHR3SFAAYAFDEPzpEK60woOD8IVDsHXkQERAASQ04eASEAX0YoREkVVTjDWR9FZTUUtz0AblMzNPNKiDtUERFEAFFVbGQHAGF6xqNKyxJ0HDwKAAF8+SJScj9cRtRyUXFJEgNjGssrG3snFxJ3AAkcCLh2eLmRBZwUgEJSio3qqv7zazAxRDV2hyUxJggcIgALyIMA4ADuLTaWA6OG6DREFHKlS+MJ+72okCcg2GUAoAHIAOohOy8fHlIA"),Oe="// math.ts\nexport function add(a: number, b: number): number {\n  return a + b;\n}\n\nexport function subtract(a: number, b: number): number {\n  return a - b;\n}",Ke="// logger.ts\nexport default class Logger {\n  log(message: string): void {\n    console.log(message);\n  }\n}",Pe="// types.ts\nexport type Point = { x: number; y: number };",je="// operations.ts\nexport * from './math'; // Re-export all named exports from math.ts\nexport { default as MyLogger } from './logger'; // Re-export default export as MyLogger",Je="// main.ts\nimport { add, subtract } from './math';\n\nconst result1 = add(10, 20);\nconst result2 = subtract(30, 5);",We="// app.ts\nimport MyLogger from './logger';\n\nconst logger = new MyLogger();\nlogger.log('Hello!');",Ve="// main.ts\nimport { add as addition, subtract as subtraction } from './math';\n\nconst result1 = addition(10, 20);\nconst result2 = subtraction(30, 5);",ze="// geometry.ts\nimport type { Point } from './types';\n\nfunction calculateDistance(pointA: Point, pointB: Point): number {\n    // ...\n}",qe="// main.ts\nimport * as mathModule from './math';\n\nconst result1 = mathModule.add(10, 20);\nconst result2 = mathModule.subtract(30, 5);",Ze="// Using a library with named exports\nimport { someFunction } from 'library';\n\n// Using a library with default export\nimport MyLibrary from 'my-library';",Xe="namespace Shapes {\n  export class Circle {\n    // ...\n  }\n\n  export class Rectangle {\n    // ...\n  }\n}",$e='/// <reference path="shapes.ts" />\n\nconst circle = new Shapes.Circle();\nconst rectangle = new Shapes.Rectangle();',tn="namespace Geometry {\n  export namespace Shapes {\n    export class Circle {\n    // ...\n    }\n  }\n}",en="node --inspect-brk my-ts-app.js",nn='{\n  "compilerOptions": {\n    "sourceMap": true\n  }\n}';var sn=s(7809);let a=(()=>{class t{constructor(){this.bookData=_}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=o.Xpm({type:t,selectors:[["app-ts-chapter"]],decls:1,vars:1,consts:[[3,"bookData"]],template:function(n,A){1&n&&o._UZ(0,"app-chapter",0),2&n&&o.Q6J("bookData",A.bookData)},dependencies:[sn.l]}),t})();const on=[{path:"",component:u,children:[{path:"chapter",component:a},{path:"chapter/:chid",component:a},{path:"chapter/:chid/section/:secid",component:a},{path:"**",component:a},{path:"",component:a}]}];let rn=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=o.oAB({type:t}),t.\u0275inj=o.cJS({imports:[l.Bz.forChild(on),l.Bz]}),t})();var an=s(1375);let _n=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=o.oAB({type:t}),t.\u0275inj=o.cJS({imports:[c.ez,rn,an.I]}),t})()}}]);